// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.matchmakermultipaxos

@SerialVersionUID(0L)
final case class ChaosProto(
    leaderChangeWarmupDelayMs: _root_.scala.Int,
    leaderChangeWarmupPeriodMs: _root_.scala.Int,
    leaderChangeWarmupNum: _root_.scala.Int,
    reconfigurationWarmupDelayMs: _root_.scala.Int,
    reconfigurationWarmupPeriodMs: _root_.scala.Int,
    reconfigurationWarmupNum: _root_.scala.Int,
    matchmakerReconfigurationWarmupDelayMs: _root_.scala.Int,
    matchmakerReconfigurationWarmupPeriodMs: _root_.scala.Int,
    matchmakerReconfigurationWarmupNum: _root_.scala.Int,
    leaderFailureDelayMs: _root_.scala.Int,
    acceptorFailureDelayMs: _root_.scala.Int,
    matchmakerFailureDelayMs: _root_.scala.Int,
    acceptorRecoverDelayMs: _root_.scala.Int,
    matchmakerRecoverDelayMs: _root_.scala.Int
    ) extends scalapb.GeneratedMessage with scalapb.Message[ChaosProto] with scalapb.lenses.Updatable[ChaosProto] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, leaderChangeWarmupDelayMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, leaderChangeWarmupPeriodMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, leaderChangeWarmupNum)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, reconfigurationWarmupDelayMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(5, reconfigurationWarmupPeriodMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(6, reconfigurationWarmupNum)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(7, matchmakerReconfigurationWarmupDelayMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(8, matchmakerReconfigurationWarmupPeriodMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(9, matchmakerReconfigurationWarmupNum)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(10, leaderFailureDelayMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(11, acceptorFailureDelayMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(12, matchmakerFailureDelayMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(13, acceptorRecoverDelayMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(14, matchmakerRecoverDelayMs)
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      _output__.writeInt32(1, leaderChangeWarmupDelayMs)
      _output__.writeInt32(2, leaderChangeWarmupPeriodMs)
      _output__.writeInt32(3, leaderChangeWarmupNum)
      _output__.writeInt32(4, reconfigurationWarmupDelayMs)
      _output__.writeInt32(5, reconfigurationWarmupPeriodMs)
      _output__.writeInt32(6, reconfigurationWarmupNum)
      _output__.writeInt32(7, matchmakerReconfigurationWarmupDelayMs)
      _output__.writeInt32(8, matchmakerReconfigurationWarmupPeriodMs)
      _output__.writeInt32(9, matchmakerReconfigurationWarmupNum)
      _output__.writeInt32(10, leaderFailureDelayMs)
      _output__.writeInt32(11, acceptorFailureDelayMs)
      _output__.writeInt32(12, matchmakerFailureDelayMs)
      _output__.writeInt32(13, acceptorRecoverDelayMs)
      _output__.writeInt32(14, matchmakerRecoverDelayMs)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.matchmakermultipaxos.ChaosProto = {
      var __leaderChangeWarmupDelayMs = this.leaderChangeWarmupDelayMs
      var __leaderChangeWarmupPeriodMs = this.leaderChangeWarmupPeriodMs
      var __leaderChangeWarmupNum = this.leaderChangeWarmupNum
      var __reconfigurationWarmupDelayMs = this.reconfigurationWarmupDelayMs
      var __reconfigurationWarmupPeriodMs = this.reconfigurationWarmupPeriodMs
      var __reconfigurationWarmupNum = this.reconfigurationWarmupNum
      var __matchmakerReconfigurationWarmupDelayMs = this.matchmakerReconfigurationWarmupDelayMs
      var __matchmakerReconfigurationWarmupPeriodMs = this.matchmakerReconfigurationWarmupPeriodMs
      var __matchmakerReconfigurationWarmupNum = this.matchmakerReconfigurationWarmupNum
      var __leaderFailureDelayMs = this.leaderFailureDelayMs
      var __acceptorFailureDelayMs = this.acceptorFailureDelayMs
      var __matchmakerFailureDelayMs = this.matchmakerFailureDelayMs
      var __acceptorRecoverDelayMs = this.acceptorRecoverDelayMs
      var __matchmakerRecoverDelayMs = this.matchmakerRecoverDelayMs
      var __requiredFields0: _root_.scala.Long = 0x3fffL
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __leaderChangeWarmupDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 16 =>
            __leaderChangeWarmupPeriodMs = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 24 =>
            __leaderChangeWarmupNum = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffbL
          case 32 =>
            __reconfigurationWarmupDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffff7L
          case 40 =>
            __reconfigurationWarmupPeriodMs = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffffefL
          case 48 =>
            __reconfigurationWarmupNum = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffffdfL
          case 56 =>
            __matchmakerReconfigurationWarmupDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffffbfL
          case 64 =>
            __matchmakerReconfigurationWarmupPeriodMs = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffff7fL
          case 72 =>
            __matchmakerReconfigurationWarmupNum = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffeffL
          case 80 =>
            __leaderFailureDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffdffL
          case 88 =>
            __acceptorFailureDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffbffL
          case 96 =>
            __matchmakerFailureDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffff7ffL
          case 104 =>
            __acceptorRecoverDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffefffL
          case 112 =>
            __matchmakerRecoverDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffdfffL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      frankenpaxos.matchmakermultipaxos.ChaosProto(
          leaderChangeWarmupDelayMs = __leaderChangeWarmupDelayMs,
          leaderChangeWarmupPeriodMs = __leaderChangeWarmupPeriodMs,
          leaderChangeWarmupNum = __leaderChangeWarmupNum,
          reconfigurationWarmupDelayMs = __reconfigurationWarmupDelayMs,
          reconfigurationWarmupPeriodMs = __reconfigurationWarmupPeriodMs,
          reconfigurationWarmupNum = __reconfigurationWarmupNum,
          matchmakerReconfigurationWarmupDelayMs = __matchmakerReconfigurationWarmupDelayMs,
          matchmakerReconfigurationWarmupPeriodMs = __matchmakerReconfigurationWarmupPeriodMs,
          matchmakerReconfigurationWarmupNum = __matchmakerReconfigurationWarmupNum,
          leaderFailureDelayMs = __leaderFailureDelayMs,
          acceptorFailureDelayMs = __acceptorFailureDelayMs,
          matchmakerFailureDelayMs = __matchmakerFailureDelayMs,
          acceptorRecoverDelayMs = __acceptorRecoverDelayMs,
          matchmakerRecoverDelayMs = __matchmakerRecoverDelayMs
      )
    }
    def withLeaderChangeWarmupDelayMs(__v: _root_.scala.Int): ChaosProto = copy(leaderChangeWarmupDelayMs = __v)
    def withLeaderChangeWarmupPeriodMs(__v: _root_.scala.Int): ChaosProto = copy(leaderChangeWarmupPeriodMs = __v)
    def withLeaderChangeWarmupNum(__v: _root_.scala.Int): ChaosProto = copy(leaderChangeWarmupNum = __v)
    def withReconfigurationWarmupDelayMs(__v: _root_.scala.Int): ChaosProto = copy(reconfigurationWarmupDelayMs = __v)
    def withReconfigurationWarmupPeriodMs(__v: _root_.scala.Int): ChaosProto = copy(reconfigurationWarmupPeriodMs = __v)
    def withReconfigurationWarmupNum(__v: _root_.scala.Int): ChaosProto = copy(reconfigurationWarmupNum = __v)
    def withMatchmakerReconfigurationWarmupDelayMs(__v: _root_.scala.Int): ChaosProto = copy(matchmakerReconfigurationWarmupDelayMs = __v)
    def withMatchmakerReconfigurationWarmupPeriodMs(__v: _root_.scala.Int): ChaosProto = copy(matchmakerReconfigurationWarmupPeriodMs = __v)
    def withMatchmakerReconfigurationWarmupNum(__v: _root_.scala.Int): ChaosProto = copy(matchmakerReconfigurationWarmupNum = __v)
    def withLeaderFailureDelayMs(__v: _root_.scala.Int): ChaosProto = copy(leaderFailureDelayMs = __v)
    def withAcceptorFailureDelayMs(__v: _root_.scala.Int): ChaosProto = copy(acceptorFailureDelayMs = __v)
    def withMatchmakerFailureDelayMs(__v: _root_.scala.Int): ChaosProto = copy(matchmakerFailureDelayMs = __v)
    def withAcceptorRecoverDelayMs(__v: _root_.scala.Int): ChaosProto = copy(acceptorRecoverDelayMs = __v)
    def withMatchmakerRecoverDelayMs(__v: _root_.scala.Int): ChaosProto = copy(matchmakerRecoverDelayMs = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => leaderChangeWarmupDelayMs
        case 2 => leaderChangeWarmupPeriodMs
        case 3 => leaderChangeWarmupNum
        case 4 => reconfigurationWarmupDelayMs
        case 5 => reconfigurationWarmupPeriodMs
        case 6 => reconfigurationWarmupNum
        case 7 => matchmakerReconfigurationWarmupDelayMs
        case 8 => matchmakerReconfigurationWarmupPeriodMs
        case 9 => matchmakerReconfigurationWarmupNum
        case 10 => leaderFailureDelayMs
        case 11 => acceptorFailureDelayMs
        case 12 => matchmakerFailureDelayMs
        case 13 => acceptorRecoverDelayMs
        case 14 => matchmakerRecoverDelayMs
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(leaderChangeWarmupDelayMs)
        case 2 => _root_.scalapb.descriptors.PInt(leaderChangeWarmupPeriodMs)
        case 3 => _root_.scalapb.descriptors.PInt(leaderChangeWarmupNum)
        case 4 => _root_.scalapb.descriptors.PInt(reconfigurationWarmupDelayMs)
        case 5 => _root_.scalapb.descriptors.PInt(reconfigurationWarmupPeriodMs)
        case 6 => _root_.scalapb.descriptors.PInt(reconfigurationWarmupNum)
        case 7 => _root_.scalapb.descriptors.PInt(matchmakerReconfigurationWarmupDelayMs)
        case 8 => _root_.scalapb.descriptors.PInt(matchmakerReconfigurationWarmupPeriodMs)
        case 9 => _root_.scalapb.descriptors.PInt(matchmakerReconfigurationWarmupNum)
        case 10 => _root_.scalapb.descriptors.PInt(leaderFailureDelayMs)
        case 11 => _root_.scalapb.descriptors.PInt(acceptorFailureDelayMs)
        case 12 => _root_.scalapb.descriptors.PInt(matchmakerFailureDelayMs)
        case 13 => _root_.scalapb.descriptors.PInt(acceptorRecoverDelayMs)
        case 14 => _root_.scalapb.descriptors.PInt(matchmakerRecoverDelayMs)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.matchmakermultipaxos.ChaosProto
}

object ChaosProto extends scalapb.GeneratedMessageCompanion[frankenpaxos.matchmakermultipaxos.ChaosProto] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.matchmakermultipaxos.ChaosProto] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.matchmakermultipaxos.ChaosProto = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    frankenpaxos.matchmakermultipaxos.ChaosProto(
      __fieldsMap(__fields.get(0)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(1)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(2)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(3)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(4)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(5)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(6)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(7)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(8)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(9)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(10)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(11)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(12)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(13)).asInstanceOf[_root_.scala.Int]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.matchmakermultipaxos.ChaosProto] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.matchmakermultipaxos.ChaosProto(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).get.as[_root_.scala.Int]
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = DriverWorkloadProtoCompanion.javaDescriptor.getMessageTypes.get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = DriverWorkloadProtoCompanion.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.matchmakermultipaxos.ChaosProto(
    leaderChangeWarmupDelayMs = 0,
    leaderChangeWarmupPeriodMs = 0,
    leaderChangeWarmupNum = 0,
    reconfigurationWarmupDelayMs = 0,
    reconfigurationWarmupPeriodMs = 0,
    reconfigurationWarmupNum = 0,
    matchmakerReconfigurationWarmupDelayMs = 0,
    matchmakerReconfigurationWarmupPeriodMs = 0,
    matchmakerReconfigurationWarmupNum = 0,
    leaderFailureDelayMs = 0,
    acceptorFailureDelayMs = 0,
    matchmakerFailureDelayMs = 0,
    acceptorRecoverDelayMs = 0,
    matchmakerRecoverDelayMs = 0
  )
  implicit class ChaosProtoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.matchmakermultipaxos.ChaosProto]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.matchmakermultipaxos.ChaosProto](_l) {
    def leaderChangeWarmupDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.leaderChangeWarmupDelayMs)((c_, f_) => c_.copy(leaderChangeWarmupDelayMs = f_))
    def leaderChangeWarmupPeriodMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.leaderChangeWarmupPeriodMs)((c_, f_) => c_.copy(leaderChangeWarmupPeriodMs = f_))
    def leaderChangeWarmupNum: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.leaderChangeWarmupNum)((c_, f_) => c_.copy(leaderChangeWarmupNum = f_))
    def reconfigurationWarmupDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.reconfigurationWarmupDelayMs)((c_, f_) => c_.copy(reconfigurationWarmupDelayMs = f_))
    def reconfigurationWarmupPeriodMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.reconfigurationWarmupPeriodMs)((c_, f_) => c_.copy(reconfigurationWarmupPeriodMs = f_))
    def reconfigurationWarmupNum: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.reconfigurationWarmupNum)((c_, f_) => c_.copy(reconfigurationWarmupNum = f_))
    def matchmakerReconfigurationWarmupDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.matchmakerReconfigurationWarmupDelayMs)((c_, f_) => c_.copy(matchmakerReconfigurationWarmupDelayMs = f_))
    def matchmakerReconfigurationWarmupPeriodMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.matchmakerReconfigurationWarmupPeriodMs)((c_, f_) => c_.copy(matchmakerReconfigurationWarmupPeriodMs = f_))
    def matchmakerReconfigurationWarmupNum: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.matchmakerReconfigurationWarmupNum)((c_, f_) => c_.copy(matchmakerReconfigurationWarmupNum = f_))
    def leaderFailureDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.leaderFailureDelayMs)((c_, f_) => c_.copy(leaderFailureDelayMs = f_))
    def acceptorFailureDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.acceptorFailureDelayMs)((c_, f_) => c_.copy(acceptorFailureDelayMs = f_))
    def matchmakerFailureDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.matchmakerFailureDelayMs)((c_, f_) => c_.copy(matchmakerFailureDelayMs = f_))
    def acceptorRecoverDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.acceptorRecoverDelayMs)((c_, f_) => c_.copy(acceptorRecoverDelayMs = f_))
    def matchmakerRecoverDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.matchmakerRecoverDelayMs)((c_, f_) => c_.copy(matchmakerRecoverDelayMs = f_))
  }
  final val LEADER_CHANGE_WARMUP_DELAY_MS_FIELD_NUMBER = 1
  final val LEADER_CHANGE_WARMUP_PERIOD_MS_FIELD_NUMBER = 2
  final val LEADER_CHANGE_WARMUP_NUM_FIELD_NUMBER = 3
  final val RECONFIGURATION_WARMUP_DELAY_MS_FIELD_NUMBER = 4
  final val RECONFIGURATION_WARMUP_PERIOD_MS_FIELD_NUMBER = 5
  final val RECONFIGURATION_WARMUP_NUM_FIELD_NUMBER = 6
  final val MATCHMAKER_RECONFIGURATION_WARMUP_DELAY_MS_FIELD_NUMBER = 7
  final val MATCHMAKER_RECONFIGURATION_WARMUP_PERIOD_MS_FIELD_NUMBER = 8
  final val MATCHMAKER_RECONFIGURATION_WARMUP_NUM_FIELD_NUMBER = 9
  final val LEADER_FAILURE_DELAY_MS_FIELD_NUMBER = 10
  final val ACCEPTOR_FAILURE_DELAY_MS_FIELD_NUMBER = 11
  final val MATCHMAKER_FAILURE_DELAY_MS_FIELD_NUMBER = 12
  final val ACCEPTOR_RECOVER_DELAY_MS_FIELD_NUMBER = 13
  final val MATCHMAKER_RECOVER_DELAY_MS_FIELD_NUMBER = 14
}

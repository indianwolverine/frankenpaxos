// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.matchmakermultipaxos

@SerialVersionUID(0L)
final case class MatchmakerReconfigurationProto(
    reconfigurationWarmupDelayMs: _root_.scala.Int,
    reconfigurationWarmupPeriodMs: _root_.scala.Int,
    reconfigurationWarmupNum: _root_.scala.Int,
    matchmakerReconfigurationDelayMs: _root_.scala.Int,
    matchmakerReconfigurationPeriodMs: _root_.scala.Int,
    matchmakerReconfigurationNum: _root_.scala.Int,
    failureDelayMs: _root_.scala.Int,
    recoverDelayMs: _root_.scala.Int,
    reconfigureDelayMs: _root_.scala.Int
    ) extends scalapb.GeneratedMessage with scalapb.Message[MatchmakerReconfigurationProto] with scalapb.lenses.Updatable[MatchmakerReconfigurationProto] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, reconfigurationWarmupDelayMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, reconfigurationWarmupPeriodMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, reconfigurationWarmupNum)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, matchmakerReconfigurationDelayMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(5, matchmakerReconfigurationPeriodMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(6, matchmakerReconfigurationNum)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(7, failureDelayMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(8, recoverDelayMs)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(9, reconfigureDelayMs)
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      _output__.writeInt32(1, reconfigurationWarmupDelayMs)
      _output__.writeInt32(2, reconfigurationWarmupPeriodMs)
      _output__.writeInt32(3, reconfigurationWarmupNum)
      _output__.writeInt32(4, matchmakerReconfigurationDelayMs)
      _output__.writeInt32(5, matchmakerReconfigurationPeriodMs)
      _output__.writeInt32(6, matchmakerReconfigurationNum)
      _output__.writeInt32(7, failureDelayMs)
      _output__.writeInt32(8, recoverDelayMs)
      _output__.writeInt32(9, reconfigureDelayMs)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto = {
      var __reconfigurationWarmupDelayMs = this.reconfigurationWarmupDelayMs
      var __reconfigurationWarmupPeriodMs = this.reconfigurationWarmupPeriodMs
      var __reconfigurationWarmupNum = this.reconfigurationWarmupNum
      var __matchmakerReconfigurationDelayMs = this.matchmakerReconfigurationDelayMs
      var __matchmakerReconfigurationPeriodMs = this.matchmakerReconfigurationPeriodMs
      var __matchmakerReconfigurationNum = this.matchmakerReconfigurationNum
      var __failureDelayMs = this.failureDelayMs
      var __recoverDelayMs = this.recoverDelayMs
      var __reconfigureDelayMs = this.reconfigureDelayMs
      var __requiredFields0: _root_.scala.Long = 0x1ffL
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __reconfigurationWarmupDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 16 =>
            __reconfigurationWarmupPeriodMs = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 24 =>
            __reconfigurationWarmupNum = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffbL
          case 32 =>
            __matchmakerReconfigurationDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffff7L
          case 40 =>
            __matchmakerReconfigurationPeriodMs = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffffefL
          case 48 =>
            __matchmakerReconfigurationNum = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffffdfL
          case 56 =>
            __failureDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffffbfL
          case 64 =>
            __recoverDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xffffffffffffff7fL
          case 72 =>
            __reconfigureDelayMs = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffeffL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto(
          reconfigurationWarmupDelayMs = __reconfigurationWarmupDelayMs,
          reconfigurationWarmupPeriodMs = __reconfigurationWarmupPeriodMs,
          reconfigurationWarmupNum = __reconfigurationWarmupNum,
          matchmakerReconfigurationDelayMs = __matchmakerReconfigurationDelayMs,
          matchmakerReconfigurationPeriodMs = __matchmakerReconfigurationPeriodMs,
          matchmakerReconfigurationNum = __matchmakerReconfigurationNum,
          failureDelayMs = __failureDelayMs,
          recoverDelayMs = __recoverDelayMs,
          reconfigureDelayMs = __reconfigureDelayMs
      )
    }
    def withReconfigurationWarmupDelayMs(__v: _root_.scala.Int): MatchmakerReconfigurationProto = copy(reconfigurationWarmupDelayMs = __v)
    def withReconfigurationWarmupPeriodMs(__v: _root_.scala.Int): MatchmakerReconfigurationProto = copy(reconfigurationWarmupPeriodMs = __v)
    def withReconfigurationWarmupNum(__v: _root_.scala.Int): MatchmakerReconfigurationProto = copy(reconfigurationWarmupNum = __v)
    def withMatchmakerReconfigurationDelayMs(__v: _root_.scala.Int): MatchmakerReconfigurationProto = copy(matchmakerReconfigurationDelayMs = __v)
    def withMatchmakerReconfigurationPeriodMs(__v: _root_.scala.Int): MatchmakerReconfigurationProto = copy(matchmakerReconfigurationPeriodMs = __v)
    def withMatchmakerReconfigurationNum(__v: _root_.scala.Int): MatchmakerReconfigurationProto = copy(matchmakerReconfigurationNum = __v)
    def withFailureDelayMs(__v: _root_.scala.Int): MatchmakerReconfigurationProto = copy(failureDelayMs = __v)
    def withRecoverDelayMs(__v: _root_.scala.Int): MatchmakerReconfigurationProto = copy(recoverDelayMs = __v)
    def withReconfigureDelayMs(__v: _root_.scala.Int): MatchmakerReconfigurationProto = copy(reconfigureDelayMs = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => reconfigurationWarmupDelayMs
        case 2 => reconfigurationWarmupPeriodMs
        case 3 => reconfigurationWarmupNum
        case 4 => matchmakerReconfigurationDelayMs
        case 5 => matchmakerReconfigurationPeriodMs
        case 6 => matchmakerReconfigurationNum
        case 7 => failureDelayMs
        case 8 => recoverDelayMs
        case 9 => reconfigureDelayMs
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(reconfigurationWarmupDelayMs)
        case 2 => _root_.scalapb.descriptors.PInt(reconfigurationWarmupPeriodMs)
        case 3 => _root_.scalapb.descriptors.PInt(reconfigurationWarmupNum)
        case 4 => _root_.scalapb.descriptors.PInt(matchmakerReconfigurationDelayMs)
        case 5 => _root_.scalapb.descriptors.PInt(matchmakerReconfigurationPeriodMs)
        case 6 => _root_.scalapb.descriptors.PInt(matchmakerReconfigurationNum)
        case 7 => _root_.scalapb.descriptors.PInt(failureDelayMs)
        case 8 => _root_.scalapb.descriptors.PInt(recoverDelayMs)
        case 9 => _root_.scalapb.descriptors.PInt(reconfigureDelayMs)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto
}

object MatchmakerReconfigurationProto extends scalapb.GeneratedMessageCompanion[frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto(
      __fieldsMap(__fields.get(0)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(1)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(2)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(3)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(4)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(5)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(6)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(7)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(8)).asInstanceOf[_root_.scala.Int]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).get.as[_root_.scala.Int]
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = DriverWorkloadProtoCompanion.javaDescriptor.getMessageTypes.get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = DriverWorkloadProtoCompanion.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto(
    reconfigurationWarmupDelayMs = 0,
    reconfigurationWarmupPeriodMs = 0,
    reconfigurationWarmupNum = 0,
    matchmakerReconfigurationDelayMs = 0,
    matchmakerReconfigurationPeriodMs = 0,
    matchmakerReconfigurationNum = 0,
    failureDelayMs = 0,
    recoverDelayMs = 0,
    reconfigureDelayMs = 0
  )
  implicit class MatchmakerReconfigurationProtoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.matchmakermultipaxos.MatchmakerReconfigurationProto](_l) {
    def reconfigurationWarmupDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.reconfigurationWarmupDelayMs)((c_, f_) => c_.copy(reconfigurationWarmupDelayMs = f_))
    def reconfigurationWarmupPeriodMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.reconfigurationWarmupPeriodMs)((c_, f_) => c_.copy(reconfigurationWarmupPeriodMs = f_))
    def reconfigurationWarmupNum: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.reconfigurationWarmupNum)((c_, f_) => c_.copy(reconfigurationWarmupNum = f_))
    def matchmakerReconfigurationDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.matchmakerReconfigurationDelayMs)((c_, f_) => c_.copy(matchmakerReconfigurationDelayMs = f_))
    def matchmakerReconfigurationPeriodMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.matchmakerReconfigurationPeriodMs)((c_, f_) => c_.copy(matchmakerReconfigurationPeriodMs = f_))
    def matchmakerReconfigurationNum: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.matchmakerReconfigurationNum)((c_, f_) => c_.copy(matchmakerReconfigurationNum = f_))
    def failureDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.failureDelayMs)((c_, f_) => c_.copy(failureDelayMs = f_))
    def recoverDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.recoverDelayMs)((c_, f_) => c_.copy(recoverDelayMs = f_))
    def reconfigureDelayMs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.reconfigureDelayMs)((c_, f_) => c_.copy(reconfigureDelayMs = f_))
  }
  final val RECONFIGURATION_WARMUP_DELAY_MS_FIELD_NUMBER = 1
  final val RECONFIGURATION_WARMUP_PERIOD_MS_FIELD_NUMBER = 2
  final val RECONFIGURATION_WARMUP_NUM_FIELD_NUMBER = 3
  final val MATCHMAKER_RECONFIGURATION_DELAY_MS_FIELD_NUMBER = 4
  final val MATCHMAKER_RECONFIGURATION_PERIOD_MS_FIELD_NUMBER = 5
  final val MATCHMAKER_RECONFIGURATION_NUM_FIELD_NUMBER = 6
  final val FAILURE_DELAY_MS_FIELD_NUMBER = 7
  final val RECOVER_DELAY_MS_FIELD_NUMBER = 8
  final val RECONFIGURE_DELAY_MS_FIELD_NUMBER = 9
}

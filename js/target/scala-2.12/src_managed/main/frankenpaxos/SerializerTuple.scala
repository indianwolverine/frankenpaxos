// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos

@SerialVersionUID(0L)
final case class SerializerTuple(
    a: _root_.com.google.protobuf.ByteString,
    b: _root_.com.google.protobuf.ByteString
    ) extends scalapb.GeneratedMessage with scalapb.Message[SerializerTuple] with scalapb.lenses.Updatable[SerializerTuple] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, a)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, b)
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      _output__.writeBytes(1, a)
      _output__.writeBytes(2, b)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.SerializerTuple = {
      var __a = this.a
      var __b = this.b
      var __requiredFields0: _root_.scala.Long = 0x3L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __a = _input__.readBytes()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __b = _input__.readBytes()
            __requiredFields0 &= 0xfffffffffffffffdL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      frankenpaxos.SerializerTuple(
          a = __a,
          b = __b
      )
    }
    def withA(__v: _root_.com.google.protobuf.ByteString): SerializerTuple = copy(a = __v)
    def withB(__v: _root_.com.google.protobuf.ByteString): SerializerTuple = copy(b = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => a
        case 2 => b
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PByteString(a)
        case 2 => _root_.scalapb.descriptors.PByteString(b)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.SerializerTuple
}

object SerializerTuple extends scalapb.GeneratedMessageCompanion[frankenpaxos.SerializerTuple] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.SerializerTuple] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.SerializerTuple = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    frankenpaxos.SerializerTuple(
      __fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap(__fields.get(1)).asInstanceOf[_root_.com.google.protobuf.ByteString]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.SerializerTuple] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.SerializerTuple(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.com.google.protobuf.ByteString],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[_root_.com.google.protobuf.ByteString]
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = SerializerProto.javaDescriptor.getMessageTypes.get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = SerializerProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.SerializerTuple(
    a = _root_.com.google.protobuf.ByteString.EMPTY,
    b = _root_.com.google.protobuf.ByteString.EMPTY
  )
  implicit class SerializerTupleLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.SerializerTuple]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.SerializerTuple](_l) {
    def a: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.a)((c_, f_) => c_.copy(a = f_))
    def b: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.b)((c_, f_) => c_.copy(b = f_))
  }
  final val A_FIELD_NUMBER = 1
  final val B_FIELD_NUMBER = 2
}

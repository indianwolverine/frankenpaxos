// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.multipaxos

@SerialVersionUID(0L)
final case class UniformReadWriteWorkloadProto(
    numKeys: _root_.scala.Int,
    readFraction: _root_.scala.Float,
    writeSizeMean: _root_.scala.Int,
    writeSizeStd: _root_.scala.Int
    ) extends scalapb.GeneratedMessage with scalapb.Message[UniformReadWriteWorkloadProto] with scalapb.lenses.Updatable[UniformReadWriteWorkloadProto] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, numKeys)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(2, readFraction)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, writeSizeMean)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, writeSizeStd)
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      _output__.writeInt32(1, numKeys)
      _output__.writeFloat(2, readFraction)
      _output__.writeInt32(3, writeSizeMean)
      _output__.writeInt32(4, writeSizeStd)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.multipaxos.UniformReadWriteWorkloadProto = {
      var __numKeys = this.numKeys
      var __readFraction = this.readFraction
      var __writeSizeMean = this.writeSizeMean
      var __writeSizeStd = this.writeSizeStd
      var __requiredFields0: _root_.scala.Long = 0xfL
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __numKeys = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 21 =>
            __readFraction = _input__.readFloat()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 24 =>
            __writeSizeMean = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffbL
          case 32 =>
            __writeSizeStd = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffff7L
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      frankenpaxos.multipaxos.UniformReadWriteWorkloadProto(
          numKeys = __numKeys,
          readFraction = __readFraction,
          writeSizeMean = __writeSizeMean,
          writeSizeStd = __writeSizeStd
      )
    }
    def withNumKeys(__v: _root_.scala.Int): UniformReadWriteWorkloadProto = copy(numKeys = __v)
    def withReadFraction(__v: _root_.scala.Float): UniformReadWriteWorkloadProto = copy(readFraction = __v)
    def withWriteSizeMean(__v: _root_.scala.Int): UniformReadWriteWorkloadProto = copy(writeSizeMean = __v)
    def withWriteSizeStd(__v: _root_.scala.Int): UniformReadWriteWorkloadProto = copy(writeSizeStd = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => numKeys
        case 2 => readFraction
        case 3 => writeSizeMean
        case 4 => writeSizeStd
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(numKeys)
        case 2 => _root_.scalapb.descriptors.PFloat(readFraction)
        case 3 => _root_.scalapb.descriptors.PInt(writeSizeMean)
        case 4 => _root_.scalapb.descriptors.PInt(writeSizeStd)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.multipaxos.UniformReadWriteWorkloadProto
}

object UniformReadWriteWorkloadProto extends scalapb.GeneratedMessageCompanion[frankenpaxos.multipaxos.UniformReadWriteWorkloadProto] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.multipaxos.UniformReadWriteWorkloadProto] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.multipaxos.UniformReadWriteWorkloadProto = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    frankenpaxos.multipaxos.UniformReadWriteWorkloadProto(
      __fieldsMap(__fields.get(0)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(1)).asInstanceOf[_root_.scala.Float],
      __fieldsMap(__fields.get(2)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(3)).asInstanceOf[_root_.scala.Int]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.multipaxos.UniformReadWriteWorkloadProto] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.multipaxos.UniformReadWriteWorkloadProto(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[_root_.scala.Float],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).get.as[_root_.scala.Int]
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ReadWriteWorkloadProtoCompanion.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ReadWriteWorkloadProtoCompanion.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.multipaxos.UniformReadWriteWorkloadProto(
    numKeys = 0,
    readFraction = 0.0f,
    writeSizeMean = 0,
    writeSizeStd = 0
  )
  implicit class UniformReadWriteWorkloadProtoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.multipaxos.UniformReadWriteWorkloadProto]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.multipaxos.UniformReadWriteWorkloadProto](_l) {
    def numKeys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.numKeys)((c_, f_) => c_.copy(numKeys = f_))
    def readFraction: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Float] = field(_.readFraction)((c_, f_) => c_.copy(readFraction = f_))
    def writeSizeMean: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.writeSizeMean)((c_, f_) => c_.copy(writeSizeMean = f_))
    def writeSizeStd: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.writeSizeStd)((c_, f_) => c_.copy(writeSizeStd = f_))
  }
  final val NUM_KEYS_FIELD_NUMBER = 1
  final val READ_FRACTION_FIELD_NUMBER = 2
  final val WRITE_SIZE_MEAN_FIELD_NUMBER = 3
  final val WRITE_SIZE_STD_FIELD_NUMBER = 4
}

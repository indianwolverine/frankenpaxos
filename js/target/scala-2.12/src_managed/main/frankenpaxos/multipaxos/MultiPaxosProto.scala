// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.multipaxos

object MultiPaxosProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    scalapb.options.ScalapbProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq(
    frankenpaxos.multipaxos.Noop,
    frankenpaxos.multipaxos.CommandId,
    frankenpaxos.multipaxos.Command,
    frankenpaxos.multipaxos.CommandBatch,
    frankenpaxos.multipaxos.CommandBatchOrNoop,
    frankenpaxos.multipaxos.ClientRequest,
    frankenpaxos.multipaxos.ClientRequestBatch,
    frankenpaxos.multipaxos.Phase1a,
    frankenpaxos.multipaxos.Phase1bSlotInfo,
    frankenpaxos.multipaxos.Phase1b,
    frankenpaxos.multipaxos.Phase2a,
    frankenpaxos.multipaxos.Phase2b,
    frankenpaxos.multipaxos.Chosen,
    frankenpaxos.multipaxos.ClientReply,
    frankenpaxos.multipaxos.ClientReplyBatch,
    frankenpaxos.multipaxos.MaxSlotRequest,
    frankenpaxos.multipaxos.MaxSlotReply,
    frankenpaxos.multipaxos.BatchMaxSlotRequest,
    frankenpaxos.multipaxos.BatchMaxSlotReply,
    frankenpaxos.multipaxos.ReadRequest,
    frankenpaxos.multipaxos.ReadRequestBatch,
    frankenpaxos.multipaxos.SequentialReadRequest,
    frankenpaxos.multipaxos.SequentialReadRequestBatch,
    frankenpaxos.multipaxos.EventualReadRequest,
    frankenpaxos.multipaxos.EventualReadRequestBatch,
    frankenpaxos.multipaxos.ReadReply,
    frankenpaxos.multipaxos.ReadReplyBatch,
    frankenpaxos.multipaxos.NotLeaderClient,
    frankenpaxos.multipaxos.LeaderInfoRequestClient,
    frankenpaxos.multipaxos.LeaderInfoReplyClient,
    frankenpaxos.multipaxos.NotLeaderBatcher,
    frankenpaxos.multipaxos.LeaderInfoRequestBatcher,
    frankenpaxos.multipaxos.LeaderInfoReplyBatcher,
    frankenpaxos.multipaxos.Nack,
    frankenpaxos.multipaxos.ChosenWatermark,
    frankenpaxos.multipaxos.Recover,
    frankenpaxos.multipaxos.ClientInbound,
    frankenpaxos.multipaxos.BatcherInbound,
    frankenpaxos.multipaxos.ReadBatcherInbound,
    frankenpaxos.multipaxos.LeaderInbound,
    frankenpaxos.multipaxos.ProxyLeaderInbound,
    frankenpaxos.multipaxos.AcceptorInbound,
    frankenpaxos.multipaxos.ReplicaInbound,
    frankenpaxos.multipaxos.ProxyReplicaInbound
  )
  private lazy val ProtoBytes: Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.Seq(
  """CihmcmFua2VucGF4b3MvbXVsdGlwYXhvcy9NdWx0aVBheG9zLnByb3RvEhdmcmFua2VucGF4b3MubXVsdGlwYXhvcxoVc2Nhb
  GFwYi9zY2FsYXBiLnByb3RvIjUKBE5vb3A6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCKpA
  QoJQ29tbWFuZElkEiUKDmNsaWVudF9hZGRyZXNzGAEgAigMUg1jbGllbnRBZGRyZXNzEikKEGNsaWVudF9wc2V1ZG9ueW0YAiACK
  AVSD2NsaWVudFBzZXVkb255bRIbCgljbGllbnRfaWQYAyACKAVSCGNsaWVudElkOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFub
  m90YXRpb24uSlNFeHBvcnRBbGwilQEKB0NvbW1hbmQSQQoKY29tbWFuZF9pZBgBIAIoCzIiLmZyYW5rZW5wYXhvcy5tdWx0aXBhe
  G9zLkNvbW1hbmRJZFIJY29tbWFuZElkEhgKB2NvbW1hbmQYAiACKAxSB2NvbW1hbmQ6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuY
  W5ub3RhdGlvbi5KU0V4cG9ydEFsbCJ5CgxDb21tYW5kQmF0Y2gSOgoHY29tbWFuZBgBIAMoCzIgLmZyYW5rZW5wYXhvcy5tdWx0a
  XBheG9zLkNvbW1hbmRSB2NvbW1hbmQ6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCLPAQoSQ
  29tbWFuZEJhdGNoT3JOb29wEkwKDWNvbW1hbmRfYmF0Y2gYASABKAsyJS5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5Db21tYW5kQ
  mF0Y2hIAFIMY29tbWFuZEJhdGNoEjMKBG5vb3AYAiABKAsyHS5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5Ob29wSABSBG5vb3A6L
  eI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbEIHCgV2YWx1ZSJ6Cg1DbGllbnRSZXF1ZXN0EjoKB
  2NvbW1hbmQYASACKAsyIC5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5Db21tYW5kUgdjb21tYW5kOi3iPyoaKEBzY2FsYS5zY2FsY
  WpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwigAEKEkNsaWVudFJlcXVlc3RCYXRjaBI7CgViYXRjaBgBIAIoCzIlLmZyYW5rZ
  W5wYXhvcy5tdWx0aXBheG9zLkNvbW1hbmRCYXRjaFIFYmF0Y2g6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU
  0V4cG9ydEFsbCJ5CgdQaGFzZTFhEhQKBXJvdW5kGAEgAigFUgVyb3VuZBIpChBjaG9zZW5fd2F0ZXJtYXJrGAIgAigFUg9jaG9zZ
  W5XYXRlcm1hcms6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCK/AQoPUGhhc2UxYlNsb3RJb
  mZvEhIKBHNsb3QYASACKAVSBHNsb3QSHQoKdm90ZV9yb3VuZBgCIAIoBVIJdm90ZVJvdW5kEkoKCnZvdGVfdmFsdWUYAyACKAsyK
  y5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5Db21tYW5kQmF0Y2hPck5vb3BSCXZvdGVWYWx1ZTot4j8qGihAc2NhbGEuc2NhbGFqc
  y5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsItQBCgdQaGFzZTFiEh8KC2dyb3VwX2luZGV4GAEgAigFUgpncm91cEluZGV4EiUKD
  mFjY2VwdG9yX2luZGV4GAIgAigFUg1hY2NlcHRvckluZGV4EhQKBXJvdW5kGAMgAigFUgVyb3VuZBI8CgRpbmZvGAQgAygLMiguZ
  nJhbmtlbnBheG9zLm11bHRpcGF4b3MuUGhhc2UxYlNsb3RJbmZvUgRpbmZvOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90Y
  XRpb24uSlNFeHBvcnRBbGwiwgEKB1BoYXNlMmESEgoEc2xvdBgBIAIoBVIEc2xvdBIUCgVyb3VuZBgCIAIoBVIFcm91bmQSXgoVY
  29tbWFuZF9iYXRjaF9vcl9ub29wGAMgAigLMisuZnJhbmtlbnBheG9zLm11bHRpcGF4b3MuQ29tbWFuZEJhdGNoT3JOb29wUhJjb
  21tYW5kQmF0Y2hPck5vb3A6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCKJAQoHUGhhc2UyY
  hIlCg5hY2NlcHRvcl9pbmRleBgBIAIoBVINYWNjZXB0b3JJbmRleBISCgRzbG90GAIgAigFUgRzbG90EhQKBXJvdW5kGAMgAigFU
  gVyb3VuZDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIqsBCgZDaG9zZW4SEgoEc2xvdBgBI
  AIoBVIEc2xvdBJeChVjb21tYW5kX2JhdGNoX29yX25vb3AYAiACKAsyKy5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5Db21tYW5kQ
  mF0Y2hPck5vb3BSEmNvbW1hbmRCYXRjaE9yTm9vcDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0Q
  WxsIqsBCgtDbGllbnRSZXBseRJBCgpjb21tYW5kX2lkGAEgAigLMiIuZnJhbmtlbnBheG9zLm11bHRpcGF4b3MuQ29tbWFuZElkU
  gljb21tYW5kSWQSEgoEc2xvdBgCIAIoBVIEc2xvdBIWCgZyZXN1bHQYAyACKAxSBnJlc3VsdDot4j8qGihAc2NhbGEuc2NhbGFqc
  y5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIn0KEENsaWVudFJlcGx5QmF0Y2gSOgoFYmF0Y2gYASADKAsyJC5mcmFua2VucGF4b
  3MubXVsdGlwYXhvcy5DbGllbnRSZXBseVIFYmF0Y2g6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9yd
  EFsbCKCAQoOTWF4U2xvdFJlcXVlc3QSQQoKY29tbWFuZF9pZBgBIAIoCzIiLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLkNvbW1hb
  mRJZFIJY29tbWFuZElkOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwiuwEKDE1heFNsb3RSZ
  XBseRJBCgpjb21tYW5kX2lkGAEgAigLMiIuZnJhbmtlbnBheG9zLm11bHRpcGF4b3MuQ29tbWFuZElkUgljb21tYW5kSWQSJQoOY
  WNjZXB0b3JfaW5kZXgYAiACKAVSDWFjY2VwdG9ySW5kZXgSEgoEc2xvdBgDIAIoBVIEc2xvdDot4j8qGihAc2NhbGEuc2NhbGFqc
  y5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIpoBChNCYXRjaE1heFNsb3RSZXF1ZXN0EiwKEnJlYWRfYmF0Y2hlcl9pbmRleBgBI
  AIoBVIQcmVhZEJhdGNoZXJJbmRleBImCg9yZWFkX2JhdGNoZXJfaWQYAiACKAVSDXJlYWRCYXRjaGVySWQ6LeI/KhooQHNjYWxhL
  nNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCLTAQoRQmF0Y2hNYXhTbG90UmVwbHkSLAoScmVhZF9iYXRjaGVyX2luZ
  GV4GAEgAigFUhByZWFkQmF0Y2hlckluZGV4EiYKD3JlYWRfYmF0Y2hlcl9pZBgCIAIoBVINcmVhZEJhdGNoZXJJZBIlCg5hY2Nlc
  HRvcl9pbmRleBgDIAIoBVINYWNjZXB0b3JJbmRleBISCgRzbG90GAQgAigFUgRzbG90Oi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzL
  mFubm90YXRpb24uSlNFeHBvcnRBbGwijAEKC1JlYWRSZXF1ZXN0EhIKBHNsb3QYASACKAVSBHNsb3QSOgoHY29tbWFuZBgCIAIoC
  zIgLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLkNvbW1hbmRSB2NvbW1hbmQ6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3Rhd
  Glvbi5KU0V4cG9ydEFsbCKRAQoQUmVhZFJlcXVlc3RCYXRjaBISCgRzbG90GAEgAigFUgRzbG90EjoKB2NvbW1hbmQYAiADKAsyI
  C5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5Db21tYW5kUgdjb21tYW5kOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb
  24uSlNFeHBvcnRBbGwilgEKFVNlcXVlbnRpYWxSZWFkUmVxdWVzdBISCgRzbG90GAEgAigFUgRzbG90EjoKB2NvbW1hbmQYAiACK
  AsyIC5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5Db21tYW5kUgdjb21tYW5kOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90Y
  XRpb24uSlNFeHBvcnRBbGwimwEKGlNlcXVlbnRpYWxSZWFkUmVxdWVzdEJhdGNoEhIKBHNsb3QYASACKAVSBHNsb3QSOgoHY29tb
  WFuZBgCIAMoCzIgLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLkNvbW1hbmRSB2NvbW1hbmQ6LeI/KhooQHNjYWxhLnNjYWxhanMua
  nMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCKAAQoTRXZlbnR1YWxSZWFkUmVxdWVzdBI6Cgdjb21tYW5kGAEgAigLMiAuZnJhbmtlb
  nBheG9zLm11bHRpcGF4b3MuQ29tbWFuZFIHY29tbWFuZDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb
  3J0QWxsIoUBChhFdmVudHVhbFJlYWRSZXF1ZXN0QmF0Y2gSOgoHY29tbWFuZBgBIAMoCzIgLmZyYW5rZW5wYXhvcy5tdWx0aXBhe
  G9zLkNvbW1hbmRSB2NvbW1hbmQ6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCKpAQoJUmVhZ
  FJlcGx5EkEKCmNvbW1hbmRfaWQYASACKAsyIi5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5Db21tYW5kSWRSCWNvbW1hbmRJZBISC
  gRzbG90GAIgAigFUgRzbG90EhYKBnJlc3VsdBgDIAIoDFIGcmVzdWx0Oi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb
  24uSlNFeHBvcnRBbGwieQoOUmVhZFJlcGx5QmF0Y2gSOAoFYmF0Y2gYASADKAsyIi5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5SZ
  WFkUmVwbHlSBWJhdGNoOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwiQAoPTm90TGVhZGVyQ
  2xpZW50Oi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwiSAoXTGVhZGVySW5mb1JlcXVlc3RDb
  GllbnQ6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCJcChVMZWFkZXJJbmZvUmVwbHlDbGllb
  nQSFAoFcm91bmQYASACKAVSBXJvdW5kOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwioAEKE
  E5vdExlYWRlckJhdGNoZXISXQoUY2xpZW50X3JlcXVlc3RfYmF0Y2gYASACKAsyKy5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5Db
  GllbnRSZXF1ZXN0QmF0Y2hSEmNsaWVudFJlcXVlc3RCYXRjaDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTR
  Xhwb3J0QWxsIkkKGExlYWRlckluZm9SZXF1ZXN0QmF0Y2hlcjot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTR
  Xhwb3J0QWxsIl0KFkxlYWRlckluZm9SZXBseUJhdGNoZXISFAoFcm91bmQYASACKAVSBXJvdW5kOi3iPyoaKEBzY2FsYS5zY2FsY
  WpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwiSwoETmFjaxIUCgVyb3VuZBgBIAIoBVIFcm91bmQ6LeI/KhooQHNjYWxhLnNjY
  WxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCJUCg9DaG9zZW5XYXRlcm1hcmsSEgoEc2xvdBgBIAIoBVIEc2xvdDot4j8qG
  ihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIkwKB1JlY292ZXISEgoEc2xvdBgBIAIoBVIEc2xvdDot4
  j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIusDCg1DbGllbnRJbmJvdW5kEkkKDGNsaWVudF9yZ
  XBseRgBIAEoCzIkLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLkNsaWVudFJlcGx5SABSC2NsaWVudFJlcGx5ElYKEW5vdF9sZWFkZ
  XJfY2xpZW50GAIgASgLMiguZnJhbmtlbnBheG9zLm11bHRpcGF4b3MuTm90TGVhZGVyQ2xpZW50SABSD25vdExlYWRlckNsaWVud
  BJpChhsZWFkZXJfaW5mb19yZXBseV9jbGllbnQYAyABKAsyLi5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5MZWFkZXJJbmZvUmVwb
  HlDbGllbnRIAFIVbGVhZGVySW5mb1JlcGx5Q2xpZW50Ek0KDm1heF9zbG90X3JlcGx5GAQgASgLMiUuZnJhbmtlbnBheG9zLm11b
  HRpcGF4b3MuTWF4U2xvdFJlcGx5SABSDG1heFNsb3RSZXBseRJDCgpyZWFkX3JlcGx5GAUgASgLMiIuZnJhbmtlbnBheG9zLm11b
  HRpcGF4b3MuUmVhZFJlcGx5SABSCXJlYWRSZXBseTot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0Q
  WxsQgkKB3JlcXVlc3Qi5AIKDkJhdGNoZXJJbmJvdW5kEk8KDmNsaWVudF9yZXF1ZXN0GAEgASgLMiYuZnJhbmtlbnBheG9zLm11b
  HRpcGF4b3MuQ2xpZW50UmVxdWVzdEgAUg1jbGllbnRSZXF1ZXN0ElkKEm5vdF9sZWFkZXJfYmF0Y2hlchgCIAEoCzIpLmZyYW5rZ
  W5wYXhvcy5tdWx0aXBheG9zLk5vdExlYWRlckJhdGNoZXJIAFIQbm90TGVhZGVyQmF0Y2hlchJsChlsZWFkZXJfaW5mb19yZXBse
  V9iYXRjaGVyGAMgASgLMi8uZnJhbmtlbnBheG9zLm11bHRpcGF4b3MuTGVhZGVySW5mb1JlcGx5QmF0Y2hlckgAUhZsZWFkZXJJb
  mZvUmVwbHlCYXRjaGVyOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGxCCQoHcmVxdWVzdCLGA
  woSUmVhZEJhdGNoZXJJbmJvdW5kEkkKDHJlYWRfcmVxdWVzdBgBIAEoCzIkLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLlJlYWRSZ
  XF1ZXN0SABSC3JlYWRSZXF1ZXN0EmgKF3NlcXVlbnRpYWxfcmVhZF9yZXF1ZXN0GAIgASgLMi4uZnJhbmtlbnBheG9zLm11bHRpc
  GF4b3MuU2VxdWVudGlhbFJlYWRSZXF1ZXN0SABSFXNlcXVlbnRpYWxSZWFkUmVxdWVzdBJiChVldmVudHVhbF9yZWFkX3JlcXVlc
  3QYAyABKAsyLC5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5FdmVudHVhbFJlYWRSZXF1ZXN0SABSE2V2ZW50dWFsUmVhZFJlcXVlc
  3QSXQoUYmF0Y2hfbWF4X3Nsb3RfcmVwbHkYBCABKAsyKi5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5CYXRjaE1heFNsb3RSZXBse
  UgAUhFiYXRjaE1heFNsb3RSZXBseTot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsQgkKB3Jlc
  XVlc3Qi6AUKDUxlYWRlckluYm91bmQSPAoHcGhhc2UxYhgBIAEoCzIgLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLlBoYXNlMWJIA
  FIHcGhhc2UxYhJPCg5jbGllbnRfcmVxdWVzdBgCIAEoCzImLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLkNsaWVudFJlcXVlc3RIA
  FINY2xpZW50UmVxdWVzdBJfChRjbGllbnRfcmVxdWVzdF9iYXRjaBgDIAEoCzIrLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLkNsa
  WVudFJlcXVlc3RCYXRjaEgAUhJjbGllbnRSZXF1ZXN0QmF0Y2gSbwoabGVhZGVyX2luZm9fcmVxdWVzdF9jbGllbnQYBCABKAsyM
  C5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5MZWFkZXJJbmZvUmVxdWVzdENsaWVudEgAUhdsZWFkZXJJbmZvUmVxdWVzdENsaWVud
  BJyChtsZWFkZXJfaW5mb19yZXF1ZXN0X2JhdGNoZXIYBSABKAsyMS5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5MZWFkZXJJbmZvU
  mVxdWVzdEJhdGNoZXJIAFIYbGVhZGVySW5mb1JlcXVlc3RCYXRjaGVyEjMKBG5hY2sYBiABKAsyHS5mcmFua2VucGF4b3MubXVsd
  GlwYXhvcy5OYWNrSABSBG5hY2sSVQoQY2hvc2VuX3dhdGVybWFyaxgHIAEoCzIoLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLkNob
  3NlbldhdGVybWFya0gAUg9jaG9zZW5XYXRlcm1hcmsSPAoHcmVjb3ZlchgIIAEoCzIgLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zL
  lJlY292ZXJIAFIHcmVjb3Zlcjot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsQgkKB3JlcXVlc
  3QiygEKElByb3h5TGVhZGVySW5ib3VuZBI8CgdwaGFzZTJhGAEgASgLMiAuZnJhbmtlbnBheG9zLm11bHRpcGF4b3MuUGhhc2UyY
  UgAUgdwaGFzZTJhEjwKB3BoYXNlMmIYAiABKAsyIC5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5QaGFzZTJiSABSB3BoYXNlMmI6L
  eI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbEIJCgdyZXF1ZXN0IoEDCg9BY2NlcHRvckluYm91b
  mQSPAoHcGhhc2UxYRgBIAEoCzIgLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLlBoYXNlMWFIAFIHcGhhc2UxYRI8CgdwaGFzZTJhG
  AIgASgLMiAuZnJhbmtlbnBheG9zLm11bHRpcGF4b3MuUGhhc2UyYUgAUgdwaGFzZTJhElMKEG1heF9zbG90X3JlcXVlc3QYAyABK
  AsyJy5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5NYXhTbG90UmVxdWVzdEgAUg5tYXhTbG90UmVxdWVzdBJjChZiYXRjaF9tYXhfc
  2xvdF9yZXF1ZXN0GAQgASgLMiwuZnJhbmtlbnBheG9zLm11bHRpcGF4b3MuQmF0Y2hNYXhTbG90UmVxdWVzdEgAUhNiYXRjaE1he
  FNsb3RSZXF1ZXN0Oi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGxCCQoHcmVxdWVzdCLnBQoOU
  mVwbGljYUluYm91bmQSOQoGY2hvc2VuGAEgASgLMh8uZnJhbmtlbnBheG9zLm11bHRpcGF4b3MuQ2hvc2VuSABSBmNob3NlbhJJC
  gxyZWFkX3JlcXVlc3QYAiABKAsyJC5mcmFua2VucGF4b3MubXVsdGlwYXhvcy5SZWFkUmVxdWVzdEgAUgtyZWFkUmVxdWVzdBJoC
  hdzZXF1ZW50aWFsX3JlYWRfcmVxdWVzdBgDIAEoCzIuLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLlNlcXVlbnRpYWxSZWFkUmVxd
  WVzdEgAUhVzZXF1ZW50aWFsUmVhZFJlcXVlc3QSYgoVZXZlbnR1YWxfcmVhZF9yZXF1ZXN0GAQgASgLMiwuZnJhbmtlbnBheG9zL
  m11bHRpcGF4b3MuRXZlbnR1YWxSZWFkUmVxdWVzdEgAUhNldmVudHVhbFJlYWRSZXF1ZXN0ElkKEnJlYWRfcmVxdWVzdF9iYXRja
  BgFIAEoCzIpLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLlJlYWRSZXF1ZXN0QmF0Y2hIAFIQcmVhZFJlcXVlc3RCYXRjaBJ4Ch1zZ
  XF1ZW50aWFsX3JlYWRfcmVxdWVzdF9iYXRjaBgGIAEoCzIzLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLlNlcXVlbnRpYWxSZWFkU
  mVxdWVzdEJhdGNoSABSGnNlcXVlbnRpYWxSZWFkUmVxdWVzdEJhdGNoEnIKG2V2ZW50dWFsX3JlYWRfcmVxdWVzdF9iYXRjaBgHI
  AEoCzIxLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLkV2ZW50dWFsUmVhZFJlcXVlc3RCYXRjaEgAUhhldmVudHVhbFJlYWRSZXF1Z
  XN0QmF0Y2g6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbEIJCgdyZXF1ZXN0IpQDChNQcm94e
  VJlcGxpY2FJbmJvdW5kElkKEmNsaWVudF9yZXBseV9iYXRjaBgBIAEoCzIpLmZyYW5rZW5wYXhvcy5tdWx0aXBheG9zLkNsaWVud
  FJlcGx5QmF0Y2hIAFIQY2xpZW50UmVwbHlCYXRjaBJTChByZWFkX3JlcGx5X2JhdGNoGAIgASgLMicuZnJhbmtlbnBheG9zLm11b
  HRpcGF4b3MuUmVhZFJlcGx5QmF0Y2hIAFIOcmVhZFJlcGx5QmF0Y2gSVQoQY2hvc2VuX3dhdGVybWFyaxgDIAEoCzIoLmZyYW5rZ
  W5wYXhvcy5tdWx0aXBheG9zLkNob3NlbldhdGVybWFya0gAUg9jaG9zZW5XYXRlcm1hcmsSPAoHcmVjb3ZlchgEIAEoCzIgLmZyY
  W5rZW5wYXhvcy5tdWx0aXBheG9zLlJlY292ZXJIAFIHcmVjb3Zlcjot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uL
  kpTRXhwb3J0QWxsQgkKB3JlcXVlc3RCHuI/GwoXZnJhbmtlbnBheG9zLm11bHRpcGF4b3MQAQ=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, Array(
      scalapb.options.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}
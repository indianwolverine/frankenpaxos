// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.epaxos

@SerialVersionUID(0L)
@scala.scalajs.js.annotation.JSExportAll
final case class AcceptOk(
    instance: frankenpaxos.epaxos.Instance,
    ballot: frankenpaxos.epaxos.Ballot,
    replicaIndex: _root_.scala.Int
    ) extends scalapb.GeneratedMessage with scalapb.Message[AcceptOk] with scalapb.lenses.Updatable[AcceptOk] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(instance.serializedSize) + instance.serializedSize
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(ballot.serializedSize) + ballot.serializedSize
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(7, replicaIndex)
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      _output__.writeTag(2, 2)
      _output__.writeUInt32NoTag(instance.serializedSize)
      instance.writeTo(_output__)
      _output__.writeTag(3, 2)
      _output__.writeUInt32NoTag(ballot.serializedSize)
      ballot.writeTo(_output__)
      _output__.writeInt32(7, replicaIndex)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.epaxos.AcceptOk = {
      var __instance = this.instance
      var __ballot = this.ballot
      var __replicaIndex = this.replicaIndex
      var __requiredFields0: _root_.scala.Long = 0x7L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 18 =>
            __instance = _root_.scalapb.LiteParser.readMessage(_input__, __instance)
            __requiredFields0 &= 0xfffffffffffffffeL
          case 26 =>
            __ballot = _root_.scalapb.LiteParser.readMessage(_input__, __ballot)
            __requiredFields0 &= 0xfffffffffffffffdL
          case 56 =>
            __replicaIndex = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffbL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      frankenpaxos.epaxos.AcceptOk(
          instance = __instance,
          ballot = __ballot,
          replicaIndex = __replicaIndex
      )
    }
    def withInstance(__v: frankenpaxos.epaxos.Instance): AcceptOk = copy(instance = __v)
    def withBallot(__v: frankenpaxos.epaxos.Ballot): AcceptOk = copy(ballot = __v)
    def withReplicaIndex(__v: _root_.scala.Int): AcceptOk = copy(replicaIndex = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => instance
        case 3 => ballot
        case 7 => replicaIndex
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 2 => instance.toPMessage
        case 3 => ballot.toPMessage
        case 7 => _root_.scalapb.descriptors.PInt(replicaIndex)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.epaxos.AcceptOk
}

object AcceptOk extends scalapb.GeneratedMessageCompanion[frankenpaxos.epaxos.AcceptOk] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.epaxos.AcceptOk] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.epaxos.AcceptOk = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    frankenpaxos.epaxos.AcceptOk(
      __fieldsMap(__fields.get(0)).asInstanceOf[frankenpaxos.epaxos.Instance],
      __fieldsMap(__fields.get(1)).asInstanceOf[frankenpaxos.epaxos.Ballot],
      __fieldsMap(__fields.get(2)).asInstanceOf[_root_.scala.Int]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.epaxos.AcceptOk] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.epaxos.AcceptOk(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[frankenpaxos.epaxos.Instance],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[frankenpaxos.epaxos.Ballot],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).get.as[_root_.scala.Int]
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = EPaxosProto.javaDescriptor.getMessageTypes.get(10)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = EPaxosProto.scalaDescriptor.messages(10)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = frankenpaxos.epaxos.Instance
      case 3 => __out = frankenpaxos.epaxos.Ballot
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.epaxos.AcceptOk(
    instance = frankenpaxos.epaxos.Instance.defaultInstance,
    ballot = frankenpaxos.epaxos.Ballot.defaultInstance,
    replicaIndex = 0
  )
  implicit class AcceptOkLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.epaxos.AcceptOk]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.epaxos.AcceptOk](_l) {
    def instance: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.epaxos.Instance] = field(_.instance)((c_, f_) => c_.copy(instance = f_))
    def ballot: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.epaxos.Ballot] = field(_.ballot)((c_, f_) => c_.copy(ballot = f_))
    def replicaIndex: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.replicaIndex)((c_, f_) => c_.copy(replicaIndex = f_))
  }
  final val INSTANCE_FIELD_NUMBER = 2
  final val BALLOT_FIELD_NUMBER = 3
  final val REPLICA_INDEX_FIELD_NUMBER = 7
}

// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.fastpaxos

@SerialVersionUID(0L)
final case class LeaderInbound(
    request: frankenpaxos.fastpaxos.LeaderInbound.Request = frankenpaxos.fastpaxos.LeaderInbound.Request.Empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[LeaderInbound] with scalapb.lenses.Updatable[LeaderInbound] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (request.proposeRequest.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.proposeRequest.get.serializedSize) + request.proposeRequest.get.serializedSize }
      if (request.phase1B.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.phase1B.get.serializedSize) + request.phase1B.get.serializedSize }
      if (request.phase2B.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.phase2B.get.serializedSize) + request.phase2B.get.serializedSize }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      request.proposeRequest.foreach { __v =>
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.phase1B.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.phase2B.foreach { __v =>
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.fastpaxos.LeaderInbound = {
      var __request = this.request
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __request = frankenpaxos.fastpaxos.LeaderInbound.Request.ProposeRequest(_root_.scalapb.LiteParser.readMessage(_input__, request.proposeRequest.getOrElse(frankenpaxos.fastpaxos.ProposeRequest.defaultInstance)))
          case 18 =>
            __request = frankenpaxos.fastpaxos.LeaderInbound.Request.Phase1B(_root_.scalapb.LiteParser.readMessage(_input__, request.phase1B.getOrElse(frankenpaxos.fastpaxos.Phase1b.defaultInstance)))
          case 26 =>
            __request = frankenpaxos.fastpaxos.LeaderInbound.Request.Phase2B(_root_.scalapb.LiteParser.readMessage(_input__, request.phase2B.getOrElse(frankenpaxos.fastpaxos.Phase2b.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      frankenpaxos.fastpaxos.LeaderInbound(
          request = __request
      )
    }
    def getProposeRequest: frankenpaxos.fastpaxos.ProposeRequest = request.proposeRequest.getOrElse(frankenpaxos.fastpaxos.ProposeRequest.defaultInstance)
    def withProposeRequest(__v: frankenpaxos.fastpaxos.ProposeRequest): LeaderInbound = copy(request = frankenpaxos.fastpaxos.LeaderInbound.Request.ProposeRequest(__v))
    def getPhase1B: frankenpaxos.fastpaxos.Phase1b = request.phase1B.getOrElse(frankenpaxos.fastpaxos.Phase1b.defaultInstance)
    def withPhase1B(__v: frankenpaxos.fastpaxos.Phase1b): LeaderInbound = copy(request = frankenpaxos.fastpaxos.LeaderInbound.Request.Phase1B(__v))
    def getPhase2B: frankenpaxos.fastpaxos.Phase2b = request.phase2B.getOrElse(frankenpaxos.fastpaxos.Phase2b.defaultInstance)
    def withPhase2B(__v: frankenpaxos.fastpaxos.Phase2b): LeaderInbound = copy(request = frankenpaxos.fastpaxos.LeaderInbound.Request.Phase2B(__v))
    def clearRequest: LeaderInbound = copy(request = frankenpaxos.fastpaxos.LeaderInbound.Request.Empty)
    def withRequest(__v: frankenpaxos.fastpaxos.LeaderInbound.Request): LeaderInbound = copy(request = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => request.proposeRequest.orNull
        case 2 => request.phase1B.orNull
        case 3 => request.phase2B.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => request.proposeRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => request.phase1B.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => request.phase2B.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.fastpaxos.LeaderInbound
}

object LeaderInbound extends scalapb.GeneratedMessageCompanion[frankenpaxos.fastpaxos.LeaderInbound] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.fastpaxos.LeaderInbound] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.fastpaxos.LeaderInbound = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    frankenpaxos.fastpaxos.LeaderInbound(
      request = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[frankenpaxos.fastpaxos.ProposeRequest]].map(frankenpaxos.fastpaxos.LeaderInbound.Request.ProposeRequest)
    .orElse[frankenpaxos.fastpaxos.LeaderInbound.Request](__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[frankenpaxos.fastpaxos.Phase1b]].map(frankenpaxos.fastpaxos.LeaderInbound.Request.Phase1B))
    .orElse[frankenpaxos.fastpaxos.LeaderInbound.Request](__fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[frankenpaxos.fastpaxos.Phase2b]].map(frankenpaxos.fastpaxos.LeaderInbound.Request.Phase2B))
    .getOrElse(frankenpaxos.fastpaxos.LeaderInbound.Request.Empty)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.fastpaxos.LeaderInbound] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.fastpaxos.LeaderInbound(
        request = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[frankenpaxos.fastpaxos.ProposeRequest]]).map(frankenpaxos.fastpaxos.LeaderInbound.Request.ProposeRequest)
    .orElse[frankenpaxos.fastpaxos.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[frankenpaxos.fastpaxos.Phase1b]]).map(frankenpaxos.fastpaxos.LeaderInbound.Request.Phase1B))
    .orElse[frankenpaxos.fastpaxos.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[frankenpaxos.fastpaxos.Phase2b]]).map(frankenpaxos.fastpaxos.LeaderInbound.Request.Phase2B))
    .getOrElse(frankenpaxos.fastpaxos.LeaderInbound.Request.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = FastPaxosProto.javaDescriptor.getMessageTypes.get(7)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = FastPaxosProto.scalaDescriptor.messages(7)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = frankenpaxos.fastpaxos.ProposeRequest
      case 2 => __out = frankenpaxos.fastpaxos.Phase1b
      case 3 => __out = frankenpaxos.fastpaxos.Phase2b
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.fastpaxos.LeaderInbound(
  )
  sealed trait Request extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isProposeRequest: _root_.scala.Boolean = false
    def isPhase1B: _root_.scala.Boolean = false
    def isPhase2B: _root_.scala.Boolean = false
    def proposeRequest: scala.Option[frankenpaxos.fastpaxos.ProposeRequest] = None
    def phase1B: scala.Option[frankenpaxos.fastpaxos.Phase1b] = None
    def phase2B: scala.Option[frankenpaxos.fastpaxos.Phase2b] = None
  }
  object Request extends {
    @SerialVersionUID(0L)
    case object Empty extends frankenpaxos.fastpaxos.LeaderInbound.Request {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class ProposeRequest(value: frankenpaxos.fastpaxos.ProposeRequest) extends frankenpaxos.fastpaxos.LeaderInbound.Request {
      type ValueType = frankenpaxos.fastpaxos.ProposeRequest
      override def isProposeRequest: _root_.scala.Boolean = true
      override def proposeRequest: scala.Option[frankenpaxos.fastpaxos.ProposeRequest] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class Phase1B(value: frankenpaxos.fastpaxos.Phase1b) extends frankenpaxos.fastpaxos.LeaderInbound.Request {
      type ValueType = frankenpaxos.fastpaxos.Phase1b
      override def isPhase1B: _root_.scala.Boolean = true
      override def phase1B: scala.Option[frankenpaxos.fastpaxos.Phase1b] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class Phase2B(value: frankenpaxos.fastpaxos.Phase2b) extends frankenpaxos.fastpaxos.LeaderInbound.Request {
      type ValueType = frankenpaxos.fastpaxos.Phase2b
      override def isPhase2B: _root_.scala.Boolean = true
      override def phase2B: scala.Option[frankenpaxos.fastpaxos.Phase2b] = Some(value)
      override def number: _root_.scala.Int = 3
    }
  }
  implicit class LeaderInboundLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastpaxos.LeaderInbound]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.fastpaxos.LeaderInbound](_l) {
    def proposeRequest: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastpaxos.ProposeRequest] = field(_.getProposeRequest)((c_, f_) => c_.copy(request = frankenpaxos.fastpaxos.LeaderInbound.Request.ProposeRequest(f_)))
    def phase1B: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastpaxos.Phase1b] = field(_.getPhase1B)((c_, f_) => c_.copy(request = frankenpaxos.fastpaxos.LeaderInbound.Request.Phase1B(f_)))
    def phase2B: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastpaxos.Phase2b] = field(_.getPhase2B)((c_, f_) => c_.copy(request = frankenpaxos.fastpaxos.LeaderInbound.Request.Phase2B(f_)))
    def request: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastpaxos.LeaderInbound.Request] = field(_.request)((c_, f_) => c_.copy(request = f_))
  }
  final val PROPOSE_REQUEST_FIELD_NUMBER = 1
  final val PHASE1B_FIELD_NUMBER = 2
  final val PHASE2B_FIELD_NUMBER = 3
}

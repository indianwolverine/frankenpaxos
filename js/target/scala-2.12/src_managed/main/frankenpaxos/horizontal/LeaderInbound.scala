// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.horizontal

@SerialVersionUID(0L)
final case class LeaderInbound(
    request: frankenpaxos.horizontal.LeaderInbound.Request = frankenpaxos.horizontal.LeaderInbound.Request.Empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[LeaderInbound] with scalapb.lenses.Updatable[LeaderInbound] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (request.phase1B.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.phase1B.get.serializedSize) + request.phase1B.get.serializedSize }
      if (request.clientRequest.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.clientRequest.get.serializedSize) + request.clientRequest.get.serializedSize }
      if (request.phase2B.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.phase2B.get.serializedSize) + request.phase2B.get.serializedSize }
      if (request.chosen.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.chosen.get.serializedSize) + request.chosen.get.serializedSize }
      if (request.reconfigure.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.reconfigure.get.serializedSize) + request.reconfigure.get.serializedSize }
      if (request.leaderInfoRequest.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.leaderInfoRequest.get.serializedSize) + request.leaderInfoRequest.get.serializedSize }
      if (request.nack.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.nack.get.serializedSize) + request.nack.get.serializedSize }
      if (request.recover.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.recover.get.serializedSize) + request.recover.get.serializedSize }
      if (request.die.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.die.get.serializedSize) + request.die.get.serializedSize }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      request.phase1B.foreach { __v =>
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.clientRequest.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.phase2B.foreach { __v =>
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.chosen.foreach { __v =>
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.reconfigure.foreach { __v =>
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.leaderInfoRequest.foreach { __v =>
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.nack.foreach { __v =>
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.recover.foreach { __v =>
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.die.foreach { __v =>
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.horizontal.LeaderInbound = {
      var __request = this.request
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __request = frankenpaxos.horizontal.LeaderInbound.Request.Phase1B(_root_.scalapb.LiteParser.readMessage(_input__, request.phase1B.getOrElse(frankenpaxos.horizontal.Phase1b.defaultInstance)))
          case 18 =>
            __request = frankenpaxos.horizontal.LeaderInbound.Request.ClientRequest(_root_.scalapb.LiteParser.readMessage(_input__, request.clientRequest.getOrElse(frankenpaxos.horizontal.ClientRequest.defaultInstance)))
          case 26 =>
            __request = frankenpaxos.horizontal.LeaderInbound.Request.Phase2B(_root_.scalapb.LiteParser.readMessage(_input__, request.phase2B.getOrElse(frankenpaxos.horizontal.Phase2b.defaultInstance)))
          case 34 =>
            __request = frankenpaxos.horizontal.LeaderInbound.Request.Chosen(_root_.scalapb.LiteParser.readMessage(_input__, request.chosen.getOrElse(frankenpaxos.horizontal.Chosen.defaultInstance)))
          case 42 =>
            __request = frankenpaxos.horizontal.LeaderInbound.Request.Reconfigure(_root_.scalapb.LiteParser.readMessage(_input__, request.reconfigure.getOrElse(frankenpaxos.horizontal.Reconfigure.defaultInstance)))
          case 50 =>
            __request = frankenpaxos.horizontal.LeaderInbound.Request.LeaderInfoRequest(_root_.scalapb.LiteParser.readMessage(_input__, request.leaderInfoRequest.getOrElse(frankenpaxos.horizontal.LeaderInfoRequest.defaultInstance)))
          case 58 =>
            __request = frankenpaxos.horizontal.LeaderInbound.Request.Nack(_root_.scalapb.LiteParser.readMessage(_input__, request.nack.getOrElse(frankenpaxos.horizontal.Nack.defaultInstance)))
          case 66 =>
            __request = frankenpaxos.horizontal.LeaderInbound.Request.Recover(_root_.scalapb.LiteParser.readMessage(_input__, request.recover.getOrElse(frankenpaxos.horizontal.Recover.defaultInstance)))
          case 74 =>
            __request = frankenpaxos.horizontal.LeaderInbound.Request.Die(_root_.scalapb.LiteParser.readMessage(_input__, request.die.getOrElse(frankenpaxos.horizontal.Die.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      frankenpaxos.horizontal.LeaderInbound(
          request = __request
      )
    }
    def getPhase1B: frankenpaxos.horizontal.Phase1b = request.phase1B.getOrElse(frankenpaxos.horizontal.Phase1b.defaultInstance)
    def withPhase1B(__v: frankenpaxos.horizontal.Phase1b): LeaderInbound = copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Phase1B(__v))
    def getClientRequest: frankenpaxos.horizontal.ClientRequest = request.clientRequest.getOrElse(frankenpaxos.horizontal.ClientRequest.defaultInstance)
    def withClientRequest(__v: frankenpaxos.horizontal.ClientRequest): LeaderInbound = copy(request = frankenpaxos.horizontal.LeaderInbound.Request.ClientRequest(__v))
    def getPhase2B: frankenpaxos.horizontal.Phase2b = request.phase2B.getOrElse(frankenpaxos.horizontal.Phase2b.defaultInstance)
    def withPhase2B(__v: frankenpaxos.horizontal.Phase2b): LeaderInbound = copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Phase2B(__v))
    def getChosen: frankenpaxos.horizontal.Chosen = request.chosen.getOrElse(frankenpaxos.horizontal.Chosen.defaultInstance)
    def withChosen(__v: frankenpaxos.horizontal.Chosen): LeaderInbound = copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Chosen(__v))
    def getReconfigure: frankenpaxos.horizontal.Reconfigure = request.reconfigure.getOrElse(frankenpaxos.horizontal.Reconfigure.defaultInstance)
    def withReconfigure(__v: frankenpaxos.horizontal.Reconfigure): LeaderInbound = copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Reconfigure(__v))
    def getLeaderInfoRequest: frankenpaxos.horizontal.LeaderInfoRequest = request.leaderInfoRequest.getOrElse(frankenpaxos.horizontal.LeaderInfoRequest.defaultInstance)
    def withLeaderInfoRequest(__v: frankenpaxos.horizontal.LeaderInfoRequest): LeaderInbound = copy(request = frankenpaxos.horizontal.LeaderInbound.Request.LeaderInfoRequest(__v))
    def getNack: frankenpaxos.horizontal.Nack = request.nack.getOrElse(frankenpaxos.horizontal.Nack.defaultInstance)
    def withNack(__v: frankenpaxos.horizontal.Nack): LeaderInbound = copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Nack(__v))
    def getRecover: frankenpaxos.horizontal.Recover = request.recover.getOrElse(frankenpaxos.horizontal.Recover.defaultInstance)
    def withRecover(__v: frankenpaxos.horizontal.Recover): LeaderInbound = copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Recover(__v))
    def getDie: frankenpaxos.horizontal.Die = request.die.getOrElse(frankenpaxos.horizontal.Die.defaultInstance)
    def withDie(__v: frankenpaxos.horizontal.Die): LeaderInbound = copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Die(__v))
    def clearRequest: LeaderInbound = copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Empty)
    def withRequest(__v: frankenpaxos.horizontal.LeaderInbound.Request): LeaderInbound = copy(request = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => request.phase1B.orNull
        case 2 => request.clientRequest.orNull
        case 3 => request.phase2B.orNull
        case 4 => request.chosen.orNull
        case 5 => request.reconfigure.orNull
        case 6 => request.leaderInfoRequest.orNull
        case 7 => request.nack.orNull
        case 8 => request.recover.orNull
        case 9 => request.die.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => request.phase1B.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => request.clientRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => request.phase2B.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => request.chosen.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => request.reconfigure.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => request.leaderInfoRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => request.nack.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => request.recover.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => request.die.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.horizontal.LeaderInbound
}

object LeaderInbound extends scalapb.GeneratedMessageCompanion[frankenpaxos.horizontal.LeaderInbound] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.horizontal.LeaderInbound] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.horizontal.LeaderInbound = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    frankenpaxos.horizontal.LeaderInbound(
      request = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[frankenpaxos.horizontal.Phase1b]].map(frankenpaxos.horizontal.LeaderInbound.Request.Phase1B)
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[frankenpaxos.horizontal.ClientRequest]].map(frankenpaxos.horizontal.LeaderInbound.Request.ClientRequest))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[frankenpaxos.horizontal.Phase2b]].map(frankenpaxos.horizontal.LeaderInbound.Request.Phase2B))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[frankenpaxos.horizontal.Chosen]].map(frankenpaxos.horizontal.LeaderInbound.Request.Chosen))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[frankenpaxos.horizontal.Reconfigure]].map(frankenpaxos.horizontal.LeaderInbound.Request.Reconfigure))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[frankenpaxos.horizontal.LeaderInfoRequest]].map(frankenpaxos.horizontal.LeaderInbound.Request.LeaderInfoRequest))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[frankenpaxos.horizontal.Nack]].map(frankenpaxos.horizontal.LeaderInbound.Request.Nack))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[frankenpaxos.horizontal.Recover]].map(frankenpaxos.horizontal.LeaderInbound.Request.Recover))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[frankenpaxos.horizontal.Die]].map(frankenpaxos.horizontal.LeaderInbound.Request.Die))
    .getOrElse(frankenpaxos.horizontal.LeaderInbound.Request.Empty)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.horizontal.LeaderInbound] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.horizontal.LeaderInbound(
        request = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[frankenpaxos.horizontal.Phase1b]]).map(frankenpaxos.horizontal.LeaderInbound.Request.Phase1B)
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[frankenpaxos.horizontal.ClientRequest]]).map(frankenpaxos.horizontal.LeaderInbound.Request.ClientRequest))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[frankenpaxos.horizontal.Phase2b]]).map(frankenpaxos.horizontal.LeaderInbound.Request.Phase2B))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[frankenpaxos.horizontal.Chosen]]).map(frankenpaxos.horizontal.LeaderInbound.Request.Chosen))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[frankenpaxos.horizontal.Reconfigure]]).map(frankenpaxos.horizontal.LeaderInbound.Request.Reconfigure))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[frankenpaxos.horizontal.LeaderInfoRequest]]).map(frankenpaxos.horizontal.LeaderInbound.Request.LeaderInfoRequest))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[frankenpaxos.horizontal.Nack]]).map(frankenpaxos.horizontal.LeaderInbound.Request.Nack))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[scala.Option[frankenpaxos.horizontal.Recover]]).map(frankenpaxos.horizontal.LeaderInbound.Request.Recover))
    .orElse[frankenpaxos.horizontal.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[scala.Option[frankenpaxos.horizontal.Die]]).map(frankenpaxos.horizontal.LeaderInbound.Request.Die))
    .getOrElse(frankenpaxos.horizontal.LeaderInbound.Request.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = HorizontalProto.javaDescriptor.getMessageTypes.get(21)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = HorizontalProto.scalaDescriptor.messages(21)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = frankenpaxos.horizontal.Phase1b
      case 2 => __out = frankenpaxos.horizontal.ClientRequest
      case 3 => __out = frankenpaxos.horizontal.Phase2b
      case 4 => __out = frankenpaxos.horizontal.Chosen
      case 5 => __out = frankenpaxos.horizontal.Reconfigure
      case 6 => __out = frankenpaxos.horizontal.LeaderInfoRequest
      case 7 => __out = frankenpaxos.horizontal.Nack
      case 8 => __out = frankenpaxos.horizontal.Recover
      case 9 => __out = frankenpaxos.horizontal.Die
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.horizontal.LeaderInbound(
  )
  sealed trait Request extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isPhase1B: _root_.scala.Boolean = false
    def isClientRequest: _root_.scala.Boolean = false
    def isPhase2B: _root_.scala.Boolean = false
    def isChosen: _root_.scala.Boolean = false
    def isReconfigure: _root_.scala.Boolean = false
    def isLeaderInfoRequest: _root_.scala.Boolean = false
    def isNack: _root_.scala.Boolean = false
    def isRecover: _root_.scala.Boolean = false
    def isDie: _root_.scala.Boolean = false
    def phase1B: scala.Option[frankenpaxos.horizontal.Phase1b] = None
    def clientRequest: scala.Option[frankenpaxos.horizontal.ClientRequest] = None
    def phase2B: scala.Option[frankenpaxos.horizontal.Phase2b] = None
    def chosen: scala.Option[frankenpaxos.horizontal.Chosen] = None
    def reconfigure: scala.Option[frankenpaxos.horizontal.Reconfigure] = None
    def leaderInfoRequest: scala.Option[frankenpaxos.horizontal.LeaderInfoRequest] = None
    def nack: scala.Option[frankenpaxos.horizontal.Nack] = None
    def recover: scala.Option[frankenpaxos.horizontal.Recover] = None
    def die: scala.Option[frankenpaxos.horizontal.Die] = None
  }
  object Request extends {
    @SerialVersionUID(0L)
    case object Empty extends frankenpaxos.horizontal.LeaderInbound.Request {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Phase1B(value: frankenpaxos.horizontal.Phase1b) extends frankenpaxos.horizontal.LeaderInbound.Request {
      type ValueType = frankenpaxos.horizontal.Phase1b
      override def isPhase1B: _root_.scala.Boolean = true
      override def phase1B: scala.Option[frankenpaxos.horizontal.Phase1b] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class ClientRequest(value: frankenpaxos.horizontal.ClientRequest) extends frankenpaxos.horizontal.LeaderInbound.Request {
      type ValueType = frankenpaxos.horizontal.ClientRequest
      override def isClientRequest: _root_.scala.Boolean = true
      override def clientRequest: scala.Option[frankenpaxos.horizontal.ClientRequest] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class Phase2B(value: frankenpaxos.horizontal.Phase2b) extends frankenpaxos.horizontal.LeaderInbound.Request {
      type ValueType = frankenpaxos.horizontal.Phase2b
      override def isPhase2B: _root_.scala.Boolean = true
      override def phase2B: scala.Option[frankenpaxos.horizontal.Phase2b] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class Chosen(value: frankenpaxos.horizontal.Chosen) extends frankenpaxos.horizontal.LeaderInbound.Request {
      type ValueType = frankenpaxos.horizontal.Chosen
      override def isChosen: _root_.scala.Boolean = true
      override def chosen: scala.Option[frankenpaxos.horizontal.Chosen] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class Reconfigure(value: frankenpaxos.horizontal.Reconfigure) extends frankenpaxos.horizontal.LeaderInbound.Request {
      type ValueType = frankenpaxos.horizontal.Reconfigure
      override def isReconfigure: _root_.scala.Boolean = true
      override def reconfigure: scala.Option[frankenpaxos.horizontal.Reconfigure] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class LeaderInfoRequest(value: frankenpaxos.horizontal.LeaderInfoRequest) extends frankenpaxos.horizontal.LeaderInbound.Request {
      type ValueType = frankenpaxos.horizontal.LeaderInfoRequest
      override def isLeaderInfoRequest: _root_.scala.Boolean = true
      override def leaderInfoRequest: scala.Option[frankenpaxos.horizontal.LeaderInfoRequest] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class Nack(value: frankenpaxos.horizontal.Nack) extends frankenpaxos.horizontal.LeaderInbound.Request {
      type ValueType = frankenpaxos.horizontal.Nack
      override def isNack: _root_.scala.Boolean = true
      override def nack: scala.Option[frankenpaxos.horizontal.Nack] = Some(value)
      override def number: _root_.scala.Int = 7
    }
    @SerialVersionUID(0L)
    final case class Recover(value: frankenpaxos.horizontal.Recover) extends frankenpaxos.horizontal.LeaderInbound.Request {
      type ValueType = frankenpaxos.horizontal.Recover
      override def isRecover: _root_.scala.Boolean = true
      override def recover: scala.Option[frankenpaxos.horizontal.Recover] = Some(value)
      override def number: _root_.scala.Int = 8
    }
    @SerialVersionUID(0L)
    final case class Die(value: frankenpaxos.horizontal.Die) extends frankenpaxos.horizontal.LeaderInbound.Request {
      type ValueType = frankenpaxos.horizontal.Die
      override def isDie: _root_.scala.Boolean = true
      override def die: scala.Option[frankenpaxos.horizontal.Die] = Some(value)
      override def number: _root_.scala.Int = 9
    }
  }
  implicit class LeaderInboundLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.horizontal.LeaderInbound]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.horizontal.LeaderInbound](_l) {
    def phase1B: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.horizontal.Phase1b] = field(_.getPhase1B)((c_, f_) => c_.copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Phase1B(f_)))
    def clientRequest: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.horizontal.ClientRequest] = field(_.getClientRequest)((c_, f_) => c_.copy(request = frankenpaxos.horizontal.LeaderInbound.Request.ClientRequest(f_)))
    def phase2B: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.horizontal.Phase2b] = field(_.getPhase2B)((c_, f_) => c_.copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Phase2B(f_)))
    def chosen: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.horizontal.Chosen] = field(_.getChosen)((c_, f_) => c_.copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Chosen(f_)))
    def reconfigure: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.horizontal.Reconfigure] = field(_.getReconfigure)((c_, f_) => c_.copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Reconfigure(f_)))
    def leaderInfoRequest: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.horizontal.LeaderInfoRequest] = field(_.getLeaderInfoRequest)((c_, f_) => c_.copy(request = frankenpaxos.horizontal.LeaderInbound.Request.LeaderInfoRequest(f_)))
    def nack: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.horizontal.Nack] = field(_.getNack)((c_, f_) => c_.copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Nack(f_)))
    def recover: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.horizontal.Recover] = field(_.getRecover)((c_, f_) => c_.copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Recover(f_)))
    def die: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.horizontal.Die] = field(_.getDie)((c_, f_) => c_.copy(request = frankenpaxos.horizontal.LeaderInbound.Request.Die(f_)))
    def request: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.horizontal.LeaderInbound.Request] = field(_.request)((c_, f_) => c_.copy(request = f_))
  }
  final val PHASE1B_FIELD_NUMBER = 1
  final val CLIENT_REQUEST_FIELD_NUMBER = 2
  final val PHASE2B_FIELD_NUMBER = 3
  final val CHOSEN_FIELD_NUMBER = 4
  final val RECONFIGURE_FIELD_NUMBER = 5
  final val LEADER_INFO_REQUEST_FIELD_NUMBER = 6
  final val NACK_FIELD_NUMBER = 7
  final val RECOVER_FIELD_NUMBER = 8
  final val DIE_FIELD_NUMBER = 9
}

// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.unanimousbpaxos

@SerialVersionUID(0L)
final case class VoteValueProto(
    commandOrNoop: frankenpaxos.unanimousbpaxos.CommandOrNoop,
    dependency: _root_.scala.collection.Seq[frankenpaxos.unanimousbpaxos.VertexId] = _root_.scala.collection.Seq.empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[VoteValueProto] with scalapb.lenses.Updatable[VoteValueProto] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(commandOrNoop.serializedSize) + commandOrNoop.serializedSize
      dependency.foreach(dependency => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(dependency.serializedSize) + dependency.serializedSize)
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      _output__.writeTag(1, 2)
      _output__.writeUInt32NoTag(commandOrNoop.serializedSize)
      commandOrNoop.writeTo(_output__)
      dependency.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.unanimousbpaxos.VoteValueProto = {
      var __commandOrNoop = this.commandOrNoop
      val __dependency = (_root_.scala.collection.immutable.Vector.newBuilder[frankenpaxos.unanimousbpaxos.VertexId] ++= this.dependency)
      var __requiredFields0: _root_.scala.Long = 0x1L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __commandOrNoop = _root_.scalapb.LiteParser.readMessage(_input__, __commandOrNoop)
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __dependency += _root_.scalapb.LiteParser.readMessage(_input__, frankenpaxos.unanimousbpaxos.VertexId.defaultInstance)
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      frankenpaxos.unanimousbpaxos.VoteValueProto(
          commandOrNoop = __commandOrNoop,
          dependency = __dependency.result()
      )
    }
    def withCommandOrNoop(__v: frankenpaxos.unanimousbpaxos.CommandOrNoop): VoteValueProto = copy(commandOrNoop = __v)
    def clearDependency = copy(dependency = _root_.scala.collection.Seq.empty)
    def addDependency(__vs: frankenpaxos.unanimousbpaxos.VertexId*): VoteValueProto = addAllDependency(__vs)
    def addAllDependency(__vs: TraversableOnce[frankenpaxos.unanimousbpaxos.VertexId]): VoteValueProto = copy(dependency = dependency ++ __vs)
    def withDependency(__v: _root_.scala.collection.Seq[frankenpaxos.unanimousbpaxos.VertexId]): VoteValueProto = copy(dependency = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => commandOrNoop
        case 2 => dependency
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => commandOrNoop.toPMessage
        case 2 => _root_.scalapb.descriptors.PRepeated(dependency.map(_.toPMessage)(_root_.scala.collection.breakOut))
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.unanimousbpaxos.VoteValueProto
}

object VoteValueProto extends scalapb.GeneratedMessageCompanion[frankenpaxos.unanimousbpaxos.VoteValueProto] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.unanimousbpaxos.VoteValueProto] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.unanimousbpaxos.VoteValueProto = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    frankenpaxos.unanimousbpaxos.VoteValueProto(
      __fieldsMap(__fields.get(0)).asInstanceOf[frankenpaxos.unanimousbpaxos.CommandOrNoop],
      __fieldsMap.getOrElse(__fields.get(1), Nil).asInstanceOf[_root_.scala.collection.Seq[frankenpaxos.unanimousbpaxos.VertexId]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.unanimousbpaxos.VoteValueProto] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.unanimousbpaxos.VoteValueProto(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[frankenpaxos.unanimousbpaxos.CommandOrNoop],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.collection.Seq[frankenpaxos.unanimousbpaxos.VertexId]]).getOrElse(_root_.scala.collection.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = UnanimousBPaxosProto.javaDescriptor.getMessageTypes.get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = UnanimousBPaxosProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = frankenpaxos.unanimousbpaxos.CommandOrNoop
      case 2 => __out = frankenpaxos.unanimousbpaxos.VertexId
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.unanimousbpaxos.VoteValueProto(
    commandOrNoop = frankenpaxos.unanimousbpaxos.CommandOrNoop.defaultInstance
  )
  implicit class VoteValueProtoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.unanimousbpaxos.VoteValueProto]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.unanimousbpaxos.VoteValueProto](_l) {
    def commandOrNoop: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.unanimousbpaxos.CommandOrNoop] = field(_.commandOrNoop)((c_, f_) => c_.copy(commandOrNoop = f_))
    def dependency: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[frankenpaxos.unanimousbpaxos.VertexId]] = field(_.dependency)((c_, f_) => c_.copy(dependency = f_))
  }
  final val COMMANDORNOOP_FIELD_NUMBER = 1
  final val DEPENDENCY_FIELD_NUMBER = 2
}

// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.vanillamencius

object VanillaMenciusProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    scalapb.options.ScalapbProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq(
    frankenpaxos.vanillamencius.Noop,
    frankenpaxos.vanillamencius.CommandId,
    frankenpaxos.vanillamencius.Command,
    frankenpaxos.vanillamencius.CommandOrNoop,
    frankenpaxos.vanillamencius.ClientRequest,
    frankenpaxos.vanillamencius.Phase1a,
    frankenpaxos.vanillamencius.PendingSlotInfo,
    frankenpaxos.vanillamencius.ChosenSlotInfo,
    frankenpaxos.vanillamencius.Phase1bSlotInfo,
    frankenpaxos.vanillamencius.Phase1b,
    frankenpaxos.vanillamencius.Phase2a,
    frankenpaxos.vanillamencius.Skip,
    frankenpaxos.vanillamencius.Phase2b,
    frankenpaxos.vanillamencius.Chosen,
    frankenpaxos.vanillamencius.ClientReply,
    frankenpaxos.vanillamencius.Phase1Nack,
    frankenpaxos.vanillamencius.Phase2Nack,
    frankenpaxos.vanillamencius.ClientInbound,
    frankenpaxos.vanillamencius.ServerInbound
  )
  private lazy val ProtoBytes: Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.Seq(
  """CjBmcmFua2VucGF4b3MvdmFuaWxsYW1lbmNpdXMvVmFuaWxsYU1lbmNpdXMucHJvdG8SG2ZyYW5rZW5wYXhvcy52YW5pbGxhb
  WVuY2l1cxoVc2NhbGFwYi9zY2FsYXBiLnByb3RvIjUKBE5vb3A6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU
  0V4cG9ydEFsbCKpAQoJQ29tbWFuZElkEiUKDmNsaWVudF9hZGRyZXNzGAEgAigMUg1jbGllbnRBZGRyZXNzEikKEGNsaWVudF9wc
  2V1ZG9ueW0YAiACKAVSD2NsaWVudFBzZXVkb255bRIbCgljbGllbnRfaWQYAyACKAVSCGNsaWVudElkOi3iPyoaKEBzY2FsYS5zY
  2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwimQEKB0NvbW1hbmQSRQoKY29tbWFuZF9pZBgBIAIoCzImLmZyYW5rZW5wY
  Xhvcy52YW5pbGxhbWVuY2l1cy5Db21tYW5kSWRSCWNvbW1hbmRJZBIYCgdjb21tYW5kGAIgAigMUgdjb21tYW5kOi3iPyoaKEBzY
  2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwiwgEKDUNvbW1hbmRPck5vb3ASQAoHY29tbWFuZBgBIAEoCzIkL
  mZyYW5rZW5wYXhvcy52YW5pbGxhbWVuY2l1cy5Db21tYW5kSABSB2NvbW1hbmQSNwoEbm9vcBgCIAEoCzIhLmZyYW5rZW5wYXhvc
  y52YW5pbGxhbWVuY2l1cy5Ob29wSABSBG5vb3A6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsb
  EIHCgV2YWx1ZSJ+Cg1DbGllbnRSZXF1ZXN0Ej4KB2NvbW1hbmQYASACKAsyJC5mcmFua2VucGF4b3MudmFuaWxsYW1lbmNpdXMuQ
  29tbWFuZFIHY29tbWFuZDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIrABCgdQaGFzZTFhE
  hQKBXJvdW5kGAEgAigFUgVyb3VuZBIwChRzdGFydF9zbG90X2luY2x1c2l2ZRgCIAIoBVISc3RhcnRTbG90SW5jbHVzaXZlEi4KE
  3N0b3Bfc2xvdF9leGNsdXNpdmUYAyACKAVSEXN0b3BTbG90RXhjbHVzaXZlOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90Y
  XRpb24uSlNFeHBvcnRBbGwiqgEKD1BlbmRpbmdTbG90SW5mbxIdCgp2b3RlX3JvdW5kGAEgAigFUgl2b3RlUm91bmQSSQoKdm90Z
  V92YWx1ZRgCIAIoCzIqLmZyYW5rZW5wYXhvcy52YW5pbGxhbWVuY2l1cy5Db21tYW5kT3JOb29wUgl2b3RlVmFsdWU6LeI/KhooQ
  HNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCKmAQoOQ2hvc2VuU2xvdEluZm8SQAoFdmFsdWUYASACKAsyK
  i5mcmFua2VucGF4b3MudmFuaWxsYW1lbmNpdXMuQ29tbWFuZE9yTm9vcFIFdmFsdWUSIwoNaXNfcmV2b2NhdGlvbhgCIAIoCFIMa
  XNSZXZvY2F0aW9uOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwikQIKD1BoYXNlMWJTbG90S
  W5mbxISCgRzbG90GAEgAigFUgRzbG90EloKEXBlbmRpbmdfc2xvdF9pbmZvGAIgASgLMiwuZnJhbmtlbnBheG9zLnZhbmlsbGFtZ
  W5jaXVzLlBlbmRpbmdTbG90SW5mb0gAUg9wZW5kaW5nU2xvdEluZm8SVwoQY2hvc2VuX3Nsb3RfaW5mbxgDIAEoCzIrLmZyYW5rZ
  W5wYXhvcy52YW5pbGxhbWVuY2l1cy5DaG9zZW5TbG90SW5mb0gAUg5jaG9zZW5TbG90SW5mbzot4j8qGihAc2NhbGEuc2NhbGFqc
  y5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsQgYKBGluZm8ilQIKB1BoYXNlMWISIQoMc2VydmVyX2luZGV4GAEgAigFUgtzZXJ2Z
  XJJbmRleBIUCgVyb3VuZBgCIAIoBVIFcm91bmQSMAoUc3RhcnRfc2xvdF9pbmNsdXNpdmUYAyACKAVSEnN0YXJ0U2xvdEluY2x1c
  2l2ZRIuChNzdG9wX3Nsb3RfZXhjbHVzaXZlGAQgAigFUhFzdG9wU2xvdEV4Y2x1c2l2ZRJACgRpbmZvGAUgAygLMiwuZnJhbmtlb
  nBheG9zLnZhbmlsbGFtZW5jaXVzLlBoYXNlMWJTbG90SW5mb1IEaW5mbzot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0a
  W9uLkpTRXhwb3J0QWxsIt0BCgdQaGFzZTJhEiUKDnNlbmRpbmdfc2VydmVyGAEgAigFUg1zZW5kaW5nU2VydmVyEhIKBHNsb3QYA
  iACKAVSBHNsb3QSFAoFcm91bmQYAyACKAVSBXJvdW5kElIKD2NvbW1hbmRfb3Jfbm9vcBgEIAIoCzIqLmZyYW5rZW5wYXhvcy52Y
  W5pbGxhbWVuY2l1cy5Db21tYW5kT3JOb29wUg1jb21tYW5kT3JOb29wOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb
  24uSlNFeHBvcnRBbGwiugEKBFNraXASIQoMc2VydmVyX2luZGV4GAEgAigFUgtzZXJ2ZXJJbmRleBIwChRzdGFydF9zbG90X2luY
  2x1c2l2ZRgCIAIoBVISc3RhcnRTbG90SW5jbHVzaXZlEi4KE3N0b3Bfc2xvdF9leGNsdXNpdmUYAyACKAVSEXN0b3BTbG90RXhjb
  HVzaXZlOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwihQEKB1BoYXNlMmISIQoMc2VydmVyX
  2luZGV4GAEgAigFUgtzZXJ2ZXJJbmRleBISCgRzbG90GAIgAigFUgRzbG90EhQKBXJvdW5kGAMgAigFUgVyb3VuZDot4j8qGihAc
  2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIsMBCgZDaG9zZW4SEgoEc2xvdBgBIAIoBVIEc2xvdBJSCg9jb
  21tYW5kX29yX25vb3AYAiACKAsyKi5mcmFua2VucGF4b3MudmFuaWxsYW1lbmNpdXMuQ29tbWFuZE9yTm9vcFINY29tbWFuZE9yT
  m9vcBIiCgxpc1Jldm9jYXRpb24YAyACKAhSDGlzUmV2b2NhdGlvbjot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uL
  kpTRXhwb3J0QWxsIpsBCgtDbGllbnRSZXBseRJFCgpjb21tYW5kX2lkGAEgAigLMiYuZnJhbmtlbnBheG9zLnZhbmlsbGFtZW5ja
  XVzLkNvbW1hbmRJZFIJY29tbWFuZElkEhYKBnJlc3VsdBgCIAIoDFIGcmVzdWx0Oi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFub
  m90YXRpb24uSlNFeHBvcnRBbGwiswEKClBoYXNlMU5hY2sSMAoUc3RhcnRfc2xvdF9pbmNsdXNpdmUYASACKAVSEnN0YXJ0U2xvd
  EluY2x1c2l2ZRIuChNzdG9wX3Nsb3RfZXhjbHVzaXZlGAIgAigFUhFzdG9wU2xvdEV4Y2x1c2l2ZRIUCgVyb3VuZBgDIAIoBVIFc
  m91bmQ6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCJlCgpQaGFzZTJOYWNrEhIKBHNsb3QYA
  SACKAVSBHNsb3QSFAoFcm91bmQYAiACKAVSBXJvdW5kOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvc
  nRBbGwimAEKDUNsaWVudEluYm91bmQSTQoMY2xpZW50X3JlcGx5GAEgASgLMiguZnJhbmtlbnBheG9zLnZhbmlsbGFtZW5jaXVzL
  kNsaWVudFJlcGx5SABSC2NsaWVudFJlcGx5Oi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGxCC
  QoHcmVxdWVzdCK2BQoNU2VydmVySW5ib3VuZBJTCg5jbGllbnRfcmVxdWVzdBgBIAEoCzIqLmZyYW5rZW5wYXhvcy52YW5pbGxhb
  WVuY2l1cy5DbGllbnRSZXF1ZXN0SABSDWNsaWVudFJlcXVlc3QSQAoHcGhhc2UxYRgCIAEoCzIkLmZyYW5rZW5wYXhvcy52YW5pb
  GxhbWVuY2l1cy5QaGFzZTFhSABSB3BoYXNlMWESQAoHcGhhc2UxYhgDIAEoCzIkLmZyYW5rZW5wYXhvcy52YW5pbGxhbWVuY2l1c
  y5QaGFzZTFiSABSB3BoYXNlMWISQAoHcGhhc2UyYRgEIAEoCzIkLmZyYW5rZW5wYXhvcy52YW5pbGxhbWVuY2l1cy5QaGFzZTJhS
  ABSB3BoYXNlMmESQAoHcGhhc2UyYhgFIAEoCzIkLmZyYW5rZW5wYXhvcy52YW5pbGxhbWVuY2l1cy5QaGFzZTJiSABSB3BoYXNlM
  mISNwoEc2tpcBgGIAEoCzIhLmZyYW5rZW5wYXhvcy52YW5pbGxhbWVuY2l1cy5Ta2lwSABSBHNraXASPQoGY2hvc2VuGAcgASgLM
  iMuZnJhbmtlbnBheG9zLnZhbmlsbGFtZW5jaXVzLkNob3NlbkgAUgZjaG9zZW4SSgoLcGhhc2UxX25hY2sYCCABKAsyJy5mcmFua
  2VucGF4b3MudmFuaWxsYW1lbmNpdXMuUGhhc2UxTmFja0gAUgpwaGFzZTFOYWNrEkoKC3BoYXNlMl9uYWNrGAkgASgLMicuZnJhb
  mtlbnBheG9zLnZhbmlsbGFtZW5jaXVzLlBoYXNlMk5hY2tIAFIKcGhhc2UyTmFjazot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hb
  m5vdGF0aW9uLkpTRXhwb3J0QWxsQgkKB3JlcXVlc3RCIuI/HwobZnJhbmtlbnBheG9zLnZhbmlsbGFtZW5jaXVzEAE="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, Array(
      scalapb.options.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}
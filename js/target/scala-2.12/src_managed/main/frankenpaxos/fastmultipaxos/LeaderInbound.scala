// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.fastmultipaxos

@SerialVersionUID(0L)
final case class LeaderInbound(
    request: frankenpaxos.fastmultipaxos.LeaderInbound.Request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[LeaderInbound] with scalapb.lenses.Updatable[LeaderInbound] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (request.proposeRequest.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.proposeRequest.get.serializedSize) + request.proposeRequest.get.serializedSize }
      if (request.phase1B.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.phase1B.get.serializedSize) + request.phase1B.get.serializedSize }
      if (request.phase1BNack.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.phase1BNack.get.serializedSize) + request.phase1BNack.get.serializedSize }
      if (request.phase2B.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.phase2B.get.serializedSize) + request.phase2B.get.serializedSize }
      if (request.phase2BBuffer.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.phase2BBuffer.get.serializedSize) + request.phase2BBuffer.get.serializedSize }
      if (request.valueChosen.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.valueChosen.get.serializedSize) + request.valueChosen.get.serializedSize }
      if (request.valueChosenBuffer.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(request.valueChosenBuffer.get.serializedSize) + request.valueChosenBuffer.get.serializedSize }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      request.proposeRequest.foreach { __v =>
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.phase1B.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.phase1BNack.foreach { __v =>
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.phase2B.foreach { __v =>
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.phase2BBuffer.foreach { __v =>
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.valueChosen.foreach { __v =>
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      request.valueChosenBuffer.foreach { __v =>
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.fastmultipaxos.LeaderInbound = {
      var __request = this.request
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.ProposeRequest(_root_.scalapb.LiteParser.readMessage(_input__, request.proposeRequest.getOrElse(frankenpaxos.fastmultipaxos.ProposeRequest.defaultInstance)))
          case 18 =>
            __request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase1B(_root_.scalapb.LiteParser.readMessage(_input__, request.phase1B.getOrElse(frankenpaxos.fastmultipaxos.Phase1b.defaultInstance)))
          case 26 =>
            __request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase1BNack(_root_.scalapb.LiteParser.readMessage(_input__, request.phase1BNack.getOrElse(frankenpaxos.fastmultipaxos.Phase1bNack.defaultInstance)))
          case 34 =>
            __request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase2B(_root_.scalapb.LiteParser.readMessage(_input__, request.phase2B.getOrElse(frankenpaxos.fastmultipaxos.Phase2b.defaultInstance)))
          case 42 =>
            __request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase2BBuffer(_root_.scalapb.LiteParser.readMessage(_input__, request.phase2BBuffer.getOrElse(frankenpaxos.fastmultipaxos.Phase2bBuffer.defaultInstance)))
          case 50 =>
            __request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.ValueChosen(_root_.scalapb.LiteParser.readMessage(_input__, request.valueChosen.getOrElse(frankenpaxos.fastmultipaxos.ValueChosen.defaultInstance)))
          case 58 =>
            __request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.ValueChosenBuffer(_root_.scalapb.LiteParser.readMessage(_input__, request.valueChosenBuffer.getOrElse(frankenpaxos.fastmultipaxos.ValueChosenBuffer.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      frankenpaxos.fastmultipaxos.LeaderInbound(
          request = __request
      )
    }
    def getProposeRequest: frankenpaxos.fastmultipaxos.ProposeRequest = request.proposeRequest.getOrElse(frankenpaxos.fastmultipaxos.ProposeRequest.defaultInstance)
    def withProposeRequest(__v: frankenpaxos.fastmultipaxos.ProposeRequest): LeaderInbound = copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.ProposeRequest(__v))
    def getPhase1B: frankenpaxos.fastmultipaxos.Phase1b = request.phase1B.getOrElse(frankenpaxos.fastmultipaxos.Phase1b.defaultInstance)
    def withPhase1B(__v: frankenpaxos.fastmultipaxos.Phase1b): LeaderInbound = copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase1B(__v))
    def getPhase1BNack: frankenpaxos.fastmultipaxos.Phase1bNack = request.phase1BNack.getOrElse(frankenpaxos.fastmultipaxos.Phase1bNack.defaultInstance)
    def withPhase1BNack(__v: frankenpaxos.fastmultipaxos.Phase1bNack): LeaderInbound = copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase1BNack(__v))
    def getPhase2B: frankenpaxos.fastmultipaxos.Phase2b = request.phase2B.getOrElse(frankenpaxos.fastmultipaxos.Phase2b.defaultInstance)
    def withPhase2B(__v: frankenpaxos.fastmultipaxos.Phase2b): LeaderInbound = copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase2B(__v))
    def getPhase2BBuffer: frankenpaxos.fastmultipaxos.Phase2bBuffer = request.phase2BBuffer.getOrElse(frankenpaxos.fastmultipaxos.Phase2bBuffer.defaultInstance)
    def withPhase2BBuffer(__v: frankenpaxos.fastmultipaxos.Phase2bBuffer): LeaderInbound = copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase2BBuffer(__v))
    def getValueChosen: frankenpaxos.fastmultipaxos.ValueChosen = request.valueChosen.getOrElse(frankenpaxos.fastmultipaxos.ValueChosen.defaultInstance)
    def withValueChosen(__v: frankenpaxos.fastmultipaxos.ValueChosen): LeaderInbound = copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.ValueChosen(__v))
    def getValueChosenBuffer: frankenpaxos.fastmultipaxos.ValueChosenBuffer = request.valueChosenBuffer.getOrElse(frankenpaxos.fastmultipaxos.ValueChosenBuffer.defaultInstance)
    def withValueChosenBuffer(__v: frankenpaxos.fastmultipaxos.ValueChosenBuffer): LeaderInbound = copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.ValueChosenBuffer(__v))
    def clearRequest: LeaderInbound = copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Empty)
    def withRequest(__v: frankenpaxos.fastmultipaxos.LeaderInbound.Request): LeaderInbound = copy(request = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => request.proposeRequest.orNull
        case 2 => request.phase1B.orNull
        case 3 => request.phase1BNack.orNull
        case 4 => request.phase2B.orNull
        case 5 => request.phase2BBuffer.orNull
        case 6 => request.valueChosen.orNull
        case 7 => request.valueChosenBuffer.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => request.proposeRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => request.phase1B.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => request.phase1BNack.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => request.phase2B.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => request.phase2BBuffer.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => request.valueChosen.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => request.valueChosenBuffer.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.fastmultipaxos.LeaderInbound
}

object LeaderInbound extends scalapb.GeneratedMessageCompanion[frankenpaxos.fastmultipaxos.LeaderInbound] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.fastmultipaxos.LeaderInbound] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.fastmultipaxos.LeaderInbound = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    frankenpaxos.fastmultipaxos.LeaderInbound(
      request = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[frankenpaxos.fastmultipaxos.ProposeRequest]].map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.ProposeRequest)
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[frankenpaxos.fastmultipaxos.Phase1b]].map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase1B))
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[frankenpaxos.fastmultipaxos.Phase1bNack]].map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase1BNack))
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[frankenpaxos.fastmultipaxos.Phase2b]].map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase2B))
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[frankenpaxos.fastmultipaxos.Phase2bBuffer]].map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase2BBuffer))
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[frankenpaxos.fastmultipaxos.ValueChosen]].map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.ValueChosen))
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[frankenpaxos.fastmultipaxos.ValueChosenBuffer]].map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.ValueChosenBuffer))
    .getOrElse(frankenpaxos.fastmultipaxos.LeaderInbound.Request.Empty)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.fastmultipaxos.LeaderInbound] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.fastmultipaxos.LeaderInbound(
        request = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[frankenpaxos.fastmultipaxos.ProposeRequest]]).map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.ProposeRequest)
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[frankenpaxos.fastmultipaxos.Phase1b]]).map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase1B))
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[frankenpaxos.fastmultipaxos.Phase1bNack]]).map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase1BNack))
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[frankenpaxos.fastmultipaxos.Phase2b]]).map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase2B))
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[frankenpaxos.fastmultipaxos.Phase2bBuffer]]).map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase2BBuffer))
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[frankenpaxos.fastmultipaxos.ValueChosen]]).map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.ValueChosen))
    .orElse[frankenpaxos.fastmultipaxos.LeaderInbound.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[frankenpaxos.fastmultipaxos.ValueChosenBuffer]]).map(frankenpaxos.fastmultipaxos.LeaderInbound.Request.ValueChosenBuffer))
    .getOrElse(frankenpaxos.fastmultipaxos.LeaderInbound.Request.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = FastMultiPaxosProto.javaDescriptor.getMessageTypes.get(18)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = FastMultiPaxosProto.scalaDescriptor.messages(18)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = frankenpaxos.fastmultipaxos.ProposeRequest
      case 2 => __out = frankenpaxos.fastmultipaxos.Phase1b
      case 3 => __out = frankenpaxos.fastmultipaxos.Phase1bNack
      case 4 => __out = frankenpaxos.fastmultipaxos.Phase2b
      case 5 => __out = frankenpaxos.fastmultipaxos.Phase2bBuffer
      case 6 => __out = frankenpaxos.fastmultipaxos.ValueChosen
      case 7 => __out = frankenpaxos.fastmultipaxos.ValueChosenBuffer
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.fastmultipaxos.LeaderInbound(
  )
  sealed trait Request extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isProposeRequest: _root_.scala.Boolean = false
    def isPhase1B: _root_.scala.Boolean = false
    def isPhase1BNack: _root_.scala.Boolean = false
    def isPhase2B: _root_.scala.Boolean = false
    def isPhase2BBuffer: _root_.scala.Boolean = false
    def isValueChosen: _root_.scala.Boolean = false
    def isValueChosenBuffer: _root_.scala.Boolean = false
    def proposeRequest: scala.Option[frankenpaxos.fastmultipaxos.ProposeRequest] = None
    def phase1B: scala.Option[frankenpaxos.fastmultipaxos.Phase1b] = None
    def phase1BNack: scala.Option[frankenpaxos.fastmultipaxos.Phase1bNack] = None
    def phase2B: scala.Option[frankenpaxos.fastmultipaxos.Phase2b] = None
    def phase2BBuffer: scala.Option[frankenpaxos.fastmultipaxos.Phase2bBuffer] = None
    def valueChosen: scala.Option[frankenpaxos.fastmultipaxos.ValueChosen] = None
    def valueChosenBuffer: scala.Option[frankenpaxos.fastmultipaxos.ValueChosenBuffer] = None
  }
  object Request extends {
    @SerialVersionUID(0L)
    case object Empty extends frankenpaxos.fastmultipaxos.LeaderInbound.Request {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class ProposeRequest(value: frankenpaxos.fastmultipaxos.ProposeRequest) extends frankenpaxos.fastmultipaxos.LeaderInbound.Request {
      type ValueType = frankenpaxos.fastmultipaxos.ProposeRequest
      override def isProposeRequest: _root_.scala.Boolean = true
      override def proposeRequest: scala.Option[frankenpaxos.fastmultipaxos.ProposeRequest] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class Phase1B(value: frankenpaxos.fastmultipaxos.Phase1b) extends frankenpaxos.fastmultipaxos.LeaderInbound.Request {
      type ValueType = frankenpaxos.fastmultipaxos.Phase1b
      override def isPhase1B: _root_.scala.Boolean = true
      override def phase1B: scala.Option[frankenpaxos.fastmultipaxos.Phase1b] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class Phase1BNack(value: frankenpaxos.fastmultipaxos.Phase1bNack) extends frankenpaxos.fastmultipaxos.LeaderInbound.Request {
      type ValueType = frankenpaxos.fastmultipaxos.Phase1bNack
      override def isPhase1BNack: _root_.scala.Boolean = true
      override def phase1BNack: scala.Option[frankenpaxos.fastmultipaxos.Phase1bNack] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class Phase2B(value: frankenpaxos.fastmultipaxos.Phase2b) extends frankenpaxos.fastmultipaxos.LeaderInbound.Request {
      type ValueType = frankenpaxos.fastmultipaxos.Phase2b
      override def isPhase2B: _root_.scala.Boolean = true
      override def phase2B: scala.Option[frankenpaxos.fastmultipaxos.Phase2b] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class Phase2BBuffer(value: frankenpaxos.fastmultipaxos.Phase2bBuffer) extends frankenpaxos.fastmultipaxos.LeaderInbound.Request {
      type ValueType = frankenpaxos.fastmultipaxos.Phase2bBuffer
      override def isPhase2BBuffer: _root_.scala.Boolean = true
      override def phase2BBuffer: scala.Option[frankenpaxos.fastmultipaxos.Phase2bBuffer] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class ValueChosen(value: frankenpaxos.fastmultipaxos.ValueChosen) extends frankenpaxos.fastmultipaxos.LeaderInbound.Request {
      type ValueType = frankenpaxos.fastmultipaxos.ValueChosen
      override def isValueChosen: _root_.scala.Boolean = true
      override def valueChosen: scala.Option[frankenpaxos.fastmultipaxos.ValueChosen] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class ValueChosenBuffer(value: frankenpaxos.fastmultipaxos.ValueChosenBuffer) extends frankenpaxos.fastmultipaxos.LeaderInbound.Request {
      type ValueType = frankenpaxos.fastmultipaxos.ValueChosenBuffer
      override def isValueChosenBuffer: _root_.scala.Boolean = true
      override def valueChosenBuffer: scala.Option[frankenpaxos.fastmultipaxos.ValueChosenBuffer] = Some(value)
      override def number: _root_.scala.Int = 7
    }
  }
  implicit class LeaderInboundLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.LeaderInbound]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.fastmultipaxos.LeaderInbound](_l) {
    def proposeRequest: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.ProposeRequest] = field(_.getProposeRequest)((c_, f_) => c_.copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.ProposeRequest(f_)))
    def phase1B: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.Phase1b] = field(_.getPhase1B)((c_, f_) => c_.copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase1B(f_)))
    def phase1BNack: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.Phase1bNack] = field(_.getPhase1BNack)((c_, f_) => c_.copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase1BNack(f_)))
    def phase2B: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.Phase2b] = field(_.getPhase2B)((c_, f_) => c_.copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase2B(f_)))
    def phase2BBuffer: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.Phase2bBuffer] = field(_.getPhase2BBuffer)((c_, f_) => c_.copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.Phase2BBuffer(f_)))
    def valueChosen: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.ValueChosen] = field(_.getValueChosen)((c_, f_) => c_.copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.ValueChosen(f_)))
    def valueChosenBuffer: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.ValueChosenBuffer] = field(_.getValueChosenBuffer)((c_, f_) => c_.copy(request = frankenpaxos.fastmultipaxos.LeaderInbound.Request.ValueChosenBuffer(f_)))
    def request: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.LeaderInbound.Request] = field(_.request)((c_, f_) => c_.copy(request = f_))
  }
  final val PROPOSE_REQUEST_FIELD_NUMBER = 1
  final val PHASE1B_FIELD_NUMBER = 2
  final val PHASE1B_NACK_FIELD_NUMBER = 3
  final val PHASE2B_FIELD_NUMBER = 4
  final val PHASE2B_BUFFER_FIELD_NUMBER = 5
  final val VALUE_CHOSEN_FIELD_NUMBER = 6
  final val VALUE_CHOSEN_BUFFER_FIELD_NUMBER = 7
}

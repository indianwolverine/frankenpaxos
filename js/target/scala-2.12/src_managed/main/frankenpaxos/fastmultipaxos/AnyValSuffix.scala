// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.fastmultipaxos

/** An infinite suffix of any's. See Phase2a.
  */
@SerialVersionUID(0L)
final case class AnyValSuffix(
    ) extends scalapb.GeneratedMessage with scalapb.Message[AnyValSuffix] with scalapb.lenses.Updatable[AnyValSuffix] {
    final override def serializedSize: _root_.scala.Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.fastmultipaxos.AnyValSuffix = {
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case tag => _input__.skipField(tag)
        }
      }
      frankenpaxos.fastmultipaxos.AnyValSuffix(
      )
    }
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.fastmultipaxos.AnyValSuffix
}

object AnyValSuffix extends scalapb.GeneratedMessageCompanion[frankenpaxos.fastmultipaxos.AnyValSuffix] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.fastmultipaxos.AnyValSuffix] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.fastmultipaxos.AnyValSuffix = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    frankenpaxos.fastmultipaxos.AnyValSuffix(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.fastmultipaxos.AnyValSuffix] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.fastmultipaxos.AnyValSuffix(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = FastMultiPaxosProto.javaDescriptor.getMessageTypes.get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = FastMultiPaxosProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.fastmultipaxos.AnyValSuffix(
  )
  implicit class AnyValSuffixLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.AnyValSuffix]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.fastmultipaxos.AnyValSuffix](_l) {
  }
}

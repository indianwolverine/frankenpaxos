// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.fastmultipaxos

@SerialVersionUID(0L)
final case class Phase2a(
    slot: _root_.scala.Int,
    round: _root_.scala.Int,
    value: frankenpaxos.fastmultipaxos.Phase2a.Value = frankenpaxos.fastmultipaxos.Phase2a.Value.Empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[Phase2a] with scalapb.lenses.Updatable[Phase2a] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, slot)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, round)
      if (value.command.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(value.command.get.serializedSize) + value.command.get.serializedSize }
      if (value.noop.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(value.noop.get.serializedSize) + value.noop.get.serializedSize }
      if (value.any.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(value.any.get.serializedSize) + value.any.get.serializedSize }
      if (value.anySuffix.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(value.anySuffix.get.serializedSize) + value.anySuffix.get.serializedSize }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      _output__.writeInt32(1, slot)
      _output__.writeInt32(2, round)
      value.command.foreach { __v =>
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      value.noop.foreach { __v =>
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      value.any.foreach { __v =>
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      value.anySuffix.foreach { __v =>
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.fastmultipaxos.Phase2a = {
      var __slot = this.slot
      var __round = this.round
      var __requiredFields0: _root_.scala.Long = 0x3L
      var __value = this.value
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __slot = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 16 =>
            __round = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 26 =>
            __value = frankenpaxos.fastmultipaxos.Phase2a.Value.Command(_root_.scalapb.LiteParser.readMessage(_input__, value.command.getOrElse(frankenpaxos.fastmultipaxos.Command.defaultInstance)))
          case 34 =>
            __value = frankenpaxos.fastmultipaxos.Phase2a.Value.Noop(_root_.scalapb.LiteParser.readMessage(_input__, value.noop.getOrElse(frankenpaxos.fastmultipaxos.Noop.defaultInstance)))
          case 42 =>
            __value = frankenpaxos.fastmultipaxos.Phase2a.Value.Any(_root_.scalapb.LiteParser.readMessage(_input__, value.any.getOrElse(frankenpaxos.fastmultipaxos.AnyVal.defaultInstance)))
          case 50 =>
            __value = frankenpaxos.fastmultipaxos.Phase2a.Value.AnySuffix(_root_.scalapb.LiteParser.readMessage(_input__, value.anySuffix.getOrElse(frankenpaxos.fastmultipaxos.AnyValSuffix.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      frankenpaxos.fastmultipaxos.Phase2a(
          slot = __slot,
          round = __round,
          value = __value
      )
    }
    def withSlot(__v: _root_.scala.Int): Phase2a = copy(slot = __v)
    def withRound(__v: _root_.scala.Int): Phase2a = copy(round = __v)
    def getCommand: frankenpaxos.fastmultipaxos.Command = value.command.getOrElse(frankenpaxos.fastmultipaxos.Command.defaultInstance)
    def withCommand(__v: frankenpaxos.fastmultipaxos.Command): Phase2a = copy(value = frankenpaxos.fastmultipaxos.Phase2a.Value.Command(__v))
    def getNoop: frankenpaxos.fastmultipaxos.Noop = value.noop.getOrElse(frankenpaxos.fastmultipaxos.Noop.defaultInstance)
    def withNoop(__v: frankenpaxos.fastmultipaxos.Noop): Phase2a = copy(value = frankenpaxos.fastmultipaxos.Phase2a.Value.Noop(__v))
    def getAny: frankenpaxos.fastmultipaxos.AnyVal = value.any.getOrElse(frankenpaxos.fastmultipaxos.AnyVal.defaultInstance)
    def withAny(__v: frankenpaxos.fastmultipaxos.AnyVal): Phase2a = copy(value = frankenpaxos.fastmultipaxos.Phase2a.Value.Any(__v))
    def getAnySuffix: frankenpaxos.fastmultipaxos.AnyValSuffix = value.anySuffix.getOrElse(frankenpaxos.fastmultipaxos.AnyValSuffix.defaultInstance)
    def withAnySuffix(__v: frankenpaxos.fastmultipaxos.AnyValSuffix): Phase2a = copy(value = frankenpaxos.fastmultipaxos.Phase2a.Value.AnySuffix(__v))
    def clearValue: Phase2a = copy(value = frankenpaxos.fastmultipaxos.Phase2a.Value.Empty)
    def withValue(__v: frankenpaxos.fastmultipaxos.Phase2a.Value): Phase2a = copy(value = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => slot
        case 2 => round
        case 3 => value.command.orNull
        case 4 => value.noop.orNull
        case 5 => value.any.orNull
        case 6 => value.anySuffix.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(slot)
        case 2 => _root_.scalapb.descriptors.PInt(round)
        case 3 => value.command.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => value.noop.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => value.any.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => value.anySuffix.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.fastmultipaxos.Phase2a
}

object Phase2a extends scalapb.GeneratedMessageCompanion[frankenpaxos.fastmultipaxos.Phase2a] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.fastmultipaxos.Phase2a] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.fastmultipaxos.Phase2a = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    frankenpaxos.fastmultipaxos.Phase2a(
      __fieldsMap(__fields.get(0)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(1)).asInstanceOf[_root_.scala.Int],
      value = __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[frankenpaxos.fastmultipaxos.Command]].map(frankenpaxos.fastmultipaxos.Phase2a.Value.Command)
    .orElse[frankenpaxos.fastmultipaxos.Phase2a.Value](__fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[frankenpaxos.fastmultipaxos.Noop]].map(frankenpaxos.fastmultipaxos.Phase2a.Value.Noop))
    .orElse[frankenpaxos.fastmultipaxos.Phase2a.Value](__fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[frankenpaxos.fastmultipaxos.AnyVal]].map(frankenpaxos.fastmultipaxos.Phase2a.Value.Any))
    .orElse[frankenpaxos.fastmultipaxos.Phase2a.Value](__fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[frankenpaxos.fastmultipaxos.AnyValSuffix]].map(frankenpaxos.fastmultipaxos.Phase2a.Value.AnySuffix))
    .getOrElse(frankenpaxos.fastmultipaxos.Phase2a.Value.Empty)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.fastmultipaxos.Phase2a] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.fastmultipaxos.Phase2a(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[_root_.scala.Int],
        value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[frankenpaxos.fastmultipaxos.Command]]).map(frankenpaxos.fastmultipaxos.Phase2a.Value.Command)
    .orElse[frankenpaxos.fastmultipaxos.Phase2a.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[frankenpaxos.fastmultipaxos.Noop]]).map(frankenpaxos.fastmultipaxos.Phase2a.Value.Noop))
    .orElse[frankenpaxos.fastmultipaxos.Phase2a.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[frankenpaxos.fastmultipaxos.AnyVal]]).map(frankenpaxos.fastmultipaxos.Phase2a.Value.Any))
    .orElse[frankenpaxos.fastmultipaxos.Phase2a.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[frankenpaxos.fastmultipaxos.AnyValSuffix]]).map(frankenpaxos.fastmultipaxos.Phase2a.Value.AnySuffix))
    .getOrElse(frankenpaxos.fastmultipaxos.Phase2a.Value.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = FastMultiPaxosProto.javaDescriptor.getMessageTypes.get(11)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = FastMultiPaxosProto.scalaDescriptor.messages(11)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = frankenpaxos.fastmultipaxos.Command
      case 4 => __out = frankenpaxos.fastmultipaxos.Noop
      case 5 => __out = frankenpaxos.fastmultipaxos.AnyVal
      case 6 => __out = frankenpaxos.fastmultipaxos.AnyValSuffix
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.fastmultipaxos.Phase2a(
    slot = 0,
    round = 0
  )
  sealed trait Value extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isCommand: _root_.scala.Boolean = false
    def isNoop: _root_.scala.Boolean = false
    def isAny: _root_.scala.Boolean = false
    def isAnySuffix: _root_.scala.Boolean = false
    def command: scala.Option[frankenpaxos.fastmultipaxos.Command] = None
    def noop: scala.Option[frankenpaxos.fastmultipaxos.Noop] = None
    def any: scala.Option[frankenpaxos.fastmultipaxos.AnyVal] = None
    def anySuffix: scala.Option[frankenpaxos.fastmultipaxos.AnyValSuffix] = None
  }
  object Value extends {
    @SerialVersionUID(0L)
    case object Empty extends frankenpaxos.fastmultipaxos.Phase2a.Value {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Command(value: frankenpaxos.fastmultipaxos.Command) extends frankenpaxos.fastmultipaxos.Phase2a.Value {
      type ValueType = frankenpaxos.fastmultipaxos.Command
      override def isCommand: _root_.scala.Boolean = true
      override def command: scala.Option[frankenpaxos.fastmultipaxos.Command] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class Noop(value: frankenpaxos.fastmultipaxos.Noop) extends frankenpaxos.fastmultipaxos.Phase2a.Value {
      type ValueType = frankenpaxos.fastmultipaxos.Noop
      override def isNoop: _root_.scala.Boolean = true
      override def noop: scala.Option[frankenpaxos.fastmultipaxos.Noop] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class Any(value: frankenpaxos.fastmultipaxos.AnyVal) extends frankenpaxos.fastmultipaxos.Phase2a.Value {
      type ValueType = frankenpaxos.fastmultipaxos.AnyVal
      override def isAny: _root_.scala.Boolean = true
      override def any: scala.Option[frankenpaxos.fastmultipaxos.AnyVal] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class AnySuffix(value: frankenpaxos.fastmultipaxos.AnyValSuffix) extends frankenpaxos.fastmultipaxos.Phase2a.Value {
      type ValueType = frankenpaxos.fastmultipaxos.AnyValSuffix
      override def isAnySuffix: _root_.scala.Boolean = true
      override def anySuffix: scala.Option[frankenpaxos.fastmultipaxos.AnyValSuffix] = Some(value)
      override def number: _root_.scala.Int = 6
    }
  }
  implicit class Phase2aLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.Phase2a]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.fastmultipaxos.Phase2a](_l) {
    def slot: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.slot)((c_, f_) => c_.copy(slot = f_))
    def round: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.round)((c_, f_) => c_.copy(round = f_))
    def command: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.Command] = field(_.getCommand)((c_, f_) => c_.copy(value = frankenpaxos.fastmultipaxos.Phase2a.Value.Command(f_)))
    def noop: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.Noop] = field(_.getNoop)((c_, f_) => c_.copy(value = frankenpaxos.fastmultipaxos.Phase2a.Value.Noop(f_)))
    def any: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.AnyVal] = field(_.getAny)((c_, f_) => c_.copy(value = frankenpaxos.fastmultipaxos.Phase2a.Value.Any(f_)))
    def anySuffix: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.AnyValSuffix] = field(_.getAnySuffix)((c_, f_) => c_.copy(value = frankenpaxos.fastmultipaxos.Phase2a.Value.AnySuffix(f_)))
    def value: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.fastmultipaxos.Phase2a.Value] = field(_.value)((c_, f_) => c_.copy(value = f_))
  }
  final val SLOT_FIELD_NUMBER = 1
  final val ROUND_FIELD_NUMBER = 2
  final val COMMAND_FIELD_NUMBER = 3
  final val NOOP_FIELD_NUMBER = 4
  final val ANY_FIELD_NUMBER = 5
  final val ANY_SUFFIX_FIELD_NUMBER = 6
}

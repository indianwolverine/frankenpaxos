// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.caspaxos

/** Protocol messages. //////////////////////////////////////////////////////////
  *
  * @param clientAddress
  *   The client's address.
  * @param clientId
  *   Clients annotate every command with a unique and monotonically increasing
  *   id. The pair of (client address, client id) uniquely identify a command.
  * @param intSet
  *   The actual command. In this simple implementation of CASPaxos, the state
  *   is a set of integers and commands are requests to add a set of integers to
  *   the set of integers.
  */
@SerialVersionUID(0L)
@scala.scalajs.js.annotation.JSExportAll
final case class ClientRequest(
    clientAddress: _root_.com.google.protobuf.ByteString,
    clientId: _root_.scala.Int,
    intSet: frankenpaxos.caspaxos.IntSet
    ) extends scalapb.GeneratedMessage with scalapb.Message[ClientRequest] with scalapb.lenses.Updatable[ClientRequest] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, clientAddress)
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, clientId)
      __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(intSet.serializedSize) + intSet.serializedSize
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      _output__.writeBytes(1, clientAddress)
      _output__.writeInt32(2, clientId)
      _output__.writeTag(3, 2)
      _output__.writeUInt32NoTag(intSet.serializedSize)
      intSet.writeTo(_output__)
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): frankenpaxos.caspaxos.ClientRequest = {
      var __clientAddress = this.clientAddress
      var __clientId = this.clientId
      var __intSet = this.intSet
      var __requiredFields0: _root_.scala.Long = 0x7L
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __clientAddress = _input__.readBytes()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 16 =>
            __clientId = _input__.readInt32()
            __requiredFields0 &= 0xfffffffffffffffdL
          case 26 =>
            __intSet = _root_.scalapb.LiteParser.readMessage(_input__, __intSet)
            __requiredFields0 &= 0xfffffffffffffffbL
          case tag => _input__.skipField(tag)
        }
      }
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      frankenpaxos.caspaxos.ClientRequest(
          clientAddress = __clientAddress,
          clientId = __clientId,
          intSet = __intSet
      )
    }
    def withClientAddress(__v: _root_.com.google.protobuf.ByteString): ClientRequest = copy(clientAddress = __v)
    def withClientId(__v: _root_.scala.Int): ClientRequest = copy(clientId = __v)
    def withIntSet(__v: frankenpaxos.caspaxos.IntSet): ClientRequest = copy(intSet = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => clientAddress
        case 2 => clientId
        case 3 => intSet
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PByteString(clientAddress)
        case 2 => _root_.scalapb.descriptors.PInt(clientId)
        case 3 => intSet.toPMessage
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = frankenpaxos.caspaxos.ClientRequest
}

object ClientRequest extends scalapb.GeneratedMessageCompanion[frankenpaxos.caspaxos.ClientRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[frankenpaxos.caspaxos.ClientRequest] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): frankenpaxos.caspaxos.ClientRequest = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    frankenpaxos.caspaxos.ClientRequest(
      __fieldsMap(__fields.get(0)).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap(__fields.get(1)).asInstanceOf[_root_.scala.Int],
      __fieldsMap(__fields.get(2)).asInstanceOf[frankenpaxos.caspaxos.IntSet]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[frankenpaxos.caspaxos.ClientRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      frankenpaxos.caspaxos.ClientRequest(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.com.google.protobuf.ByteString],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).get.as[_root_.scala.Int],
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).get.as[frankenpaxos.caspaxos.IntSet]
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = CasPaxosProto.javaDescriptor.getMessageTypes.get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = CasPaxosProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = frankenpaxos.caspaxos.IntSet
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = frankenpaxos.caspaxos.ClientRequest(
    clientAddress = _root_.com.google.protobuf.ByteString.EMPTY,
    clientId = 0,
    intSet = frankenpaxos.caspaxos.IntSet.defaultInstance
  )
  implicit class ClientRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.caspaxos.ClientRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, frankenpaxos.caspaxos.ClientRequest](_l) {
    def clientAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.clientAddress)((c_, f_) => c_.copy(clientAddress = f_))
    def clientId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.clientId)((c_, f_) => c_.copy(clientId = f_))
    def intSet: _root_.scalapb.lenses.Lens[UpperPB, frankenpaxos.caspaxos.IntSet] = field(_.intSet)((c_, f_) => c_.copy(intSet = f_))
  }
  final val CLIENT_ADDRESS_FIELD_NUMBER = 1
  final val CLIENT_ID_FIELD_NUMBER = 2
  final val INT_SET_FIELD_NUMBER = 3
}

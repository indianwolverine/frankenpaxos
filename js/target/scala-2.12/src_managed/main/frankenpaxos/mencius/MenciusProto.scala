// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package frankenpaxos.mencius

object MenciusProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    scalapb.options.ScalapbProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq(
    frankenpaxos.mencius.Noop,
    frankenpaxos.mencius.CommandId,
    frankenpaxos.mencius.Command,
    frankenpaxos.mencius.CommandBatch,
    frankenpaxos.mencius.CommandBatchOrNoop,
    frankenpaxos.mencius.ClientRequest,
    frankenpaxos.mencius.ClientRequestBatch,
    frankenpaxos.mencius.Phase1a,
    frankenpaxos.mencius.Phase1bSlotInfo,
    frankenpaxos.mencius.Phase1b,
    frankenpaxos.mencius.HighWatermark,
    frankenpaxos.mencius.Phase2a,
    frankenpaxos.mencius.Phase2aNoopRange,
    frankenpaxos.mencius.Phase2b,
    frankenpaxos.mencius.Phase2bNoopRange,
    frankenpaxos.mencius.Chosen,
    frankenpaxos.mencius.ChosenNoopRange,
    frankenpaxos.mencius.ClientReply,
    frankenpaxos.mencius.ClientReplyBatch,
    frankenpaxos.mencius.NotLeaderClient,
    frankenpaxos.mencius.LeaderInfoRequestClient,
    frankenpaxos.mencius.LeaderInfoReplyClient,
    frankenpaxos.mencius.NotLeaderBatcher,
    frankenpaxos.mencius.LeaderInfoRequestBatcher,
    frankenpaxos.mencius.LeaderInfoReplyBatcher,
    frankenpaxos.mencius.Nack,
    frankenpaxos.mencius.ChosenWatermark,
    frankenpaxos.mencius.Recover,
    frankenpaxos.mencius.ClientInbound,
    frankenpaxos.mencius.BatcherInbound,
    frankenpaxos.mencius.LeaderInbound,
    frankenpaxos.mencius.ProxyLeaderInbound,
    frankenpaxos.mencius.AcceptorInbound,
    frankenpaxos.mencius.ReplicaInbound,
    frankenpaxos.mencius.ProxyReplicaInbound
  )
  private lazy val ProtoBytes: Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.Seq(
  """CiJmcmFua2VucGF4b3MvbWVuY2l1cy9NZW5jaXVzLnByb3RvEhRmcmFua2VucGF4b3MubWVuY2l1cxoVc2NhbGFwYi9zY2FsY
  XBiLnByb3RvIjUKBE5vb3A6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCKpAQoJQ29tbWFuZ
  ElkEiUKDmNsaWVudF9hZGRyZXNzGAEgAigMUg1jbGllbnRBZGRyZXNzEikKEGNsaWVudF9wc2V1ZG9ueW0YAiACKAVSD2NsaWVud
  FBzZXVkb255bRIbCgljbGllbnRfaWQYAyACKAVSCGNsaWVudElkOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uS
  lNFeHBvcnRBbGwikgEKB0NvbW1hbmQSPgoKY29tbWFuZF9pZBgBIAIoCzIfLmZyYW5rZW5wYXhvcy5tZW5jaXVzLkNvbW1hbmRJZ
  FIJY29tbWFuZElkEhgKB2NvbW1hbmQYAiACKAxSB2NvbW1hbmQ6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU
  0V4cG9ydEFsbCJ2CgxDb21tYW5kQmF0Y2gSNwoHY29tbWFuZBgBIAMoCzIdLmZyYW5rZW5wYXhvcy5tZW5jaXVzLkNvbW1hbmRSB
  2NvbW1hbmQ6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCLJAQoSQ29tbWFuZEJhdGNoT3JOb
  29wEkkKDWNvbW1hbmRfYmF0Y2gYASABKAsyIi5mcmFua2VucGF4b3MubWVuY2l1cy5Db21tYW5kQmF0Y2hIAFIMY29tbWFuZEJhd
  GNoEjAKBG5vb3AYAiABKAsyGi5mcmFua2VucGF4b3MubWVuY2l1cy5Ob29wSABSBG5vb3A6LeI/KhooQHNjYWxhLnNjYWxhanMua
  nMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbEIHCgV2YWx1ZSJ3Cg1DbGllbnRSZXF1ZXN0EjcKB2NvbW1hbmQYASACKAsyHS5mcmFua
  2VucGF4b3MubWVuY2l1cy5Db21tYW5kUgdjb21tYW5kOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvc
  nRBbGwifQoSQ2xpZW50UmVxdWVzdEJhdGNoEjgKBWJhdGNoGAEgAigLMiIuZnJhbmtlbnBheG9zLm1lbmNpdXMuQ29tbWFuZEJhd
  GNoUgViYXRjaDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsInkKB1BoYXNlMWESFAoFcm91b
  mQYASACKAVSBXJvdW5kEikKEGNob3Nlbl93YXRlcm1hcmsYAiACKAVSD2Nob3NlbldhdGVybWFyazot4j8qGihAc2NhbGEuc2Nhb
  GFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIrwBCg9QaGFzZTFiU2xvdEluZm8SEgoEc2xvdBgBIAIoBVIEc2xvdBIdCgp2b
  3RlX3JvdW5kGAIgAigFUgl2b3RlUm91bmQSRwoKdm90ZV92YWx1ZRgDIAIoCzIoLmZyYW5rZW5wYXhvcy5tZW5jaXVzLkNvbW1hb
  mRCYXRjaE9yTm9vcFIJdm90ZVZhbHVlOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwi0QEKB
  1BoYXNlMWISHwoLZ3JvdXBfaW5kZXgYASACKAVSCmdyb3VwSW5kZXgSJQoOYWNjZXB0b3JfaW5kZXgYAiACKAVSDWFjY2VwdG9yS
  W5kZXgSFAoFcm91bmQYAyACKAVSBXJvdW5kEjkKBGluZm8YBCADKAsyJS5mcmFua2VucGF4b3MubWVuY2l1cy5QaGFzZTFiU2xvd
  EluZm9SBGluZm86LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCJaCg1IaWdoV2F0ZXJtYXJrE
  hoKCG5leHRTbG90GAEgAigFUghuZXh0U2xvdDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsI
  r8BCgdQaGFzZTJhEhIKBHNsb3QYASACKAVSBHNsb3QSFAoFcm91bmQYAiACKAVSBXJvdW5kElsKFWNvbW1hbmRfYmF0Y2hfb3Jfb
  m9vcBgDIAIoCzIoLmZyYW5rZW5wYXhvcy5tZW5jaXVzLkNvbW1hbmRCYXRjaE9yTm9vcFISY29tbWFuZEJhdGNoT3JOb29wOi3iP
  yoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwitwEKEFBoYXNlMmFOb29wUmFuZ2USMAoUc2xvdF9zd
  GFydF9pbmNsdXNpdmUYASACKAVSEnNsb3RTdGFydEluY2x1c2l2ZRIsChJzbG90X2VuZF9leGNsdXNpdmUYAiACKAVSEHNsb3RFb
  mRFeGNsdXNpdmUSFAoFcm91bmQYAyACKAVSBXJvdW5kOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvc
  nRBbGwiiQEKB1BoYXNlMmISJQoOYWNjZXB0b3JfaW5kZXgYASACKAVSDWFjY2VwdG9ySW5kZXgSEgoEc2xvdBgCIAIoBVIEc2xvd
  BIUCgVyb3VuZBgDIAIoBVIFcm91bmQ6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCKQAgoQU
  Ghhc2UyYk5vb3BSYW5nZRIwChRhY2NlcHRvcl9ncm91cF9pbmRleBgBIAIoBVISYWNjZXB0b3JHcm91cEluZGV4EiUKDmFjY2Vwd
  G9yX2luZGV4GAIgAigFUg1hY2NlcHRvckluZGV4EjAKFHNsb3Rfc3RhcnRfaW5jbHVzaXZlGAMgAigFUhJzbG90U3RhcnRJbmNsd
  XNpdmUSLAoSc2xvdF9lbmRfZXhjbHVzaXZlGAQgAigFUhBzbG90RW5kRXhjbHVzaXZlEhQKBXJvdW5kGAUgAigFUgVyb3VuZDot4
  j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIqgBCgZDaG9zZW4SEgoEc2xvdBgBIAIoBVIEc2xvd
  BJbChVjb21tYW5kX2JhdGNoX29yX25vb3AYAiACKAsyKC5mcmFua2VucGF4b3MubWVuY2l1cy5Db21tYW5kQmF0Y2hPck5vb3BSE
  mNvbW1hbmRCYXRjaE9yTm9vcDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIqABCg9DaG9zZ
  W5Ob29wUmFuZ2USMAoUc2xvdF9zdGFydF9pbmNsdXNpdmUYASACKAVSEnNsb3RTdGFydEluY2x1c2l2ZRIsChJzbG90X2VuZF9le
  GNsdXNpdmUYAiACKAVSEHNsb3RFbmRFeGNsdXNpdmU6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9yd
  EFsbCKUAQoLQ2xpZW50UmVwbHkSPgoKY29tbWFuZF9pZBgBIAIoCzIfLmZyYW5rZW5wYXhvcy5tZW5jaXVzLkNvbW1hbmRJZFIJY
  29tbWFuZElkEhYKBnJlc3VsdBgCIAIoDFIGcmVzdWx0Oi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvc
  nRBbGwiegoQQ2xpZW50UmVwbHlCYXRjaBI3CgViYXRjaBgBIAMoCzIhLmZyYW5rZW5wYXhvcy5tZW5jaXVzLkNsaWVudFJlcGx5U
  gViYXRjaDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIm4KD05vdExlYWRlckNsaWVudBIsC
  hJsZWFkZXJfZ3JvdXBfaW5kZXgYASACKAVSEGxlYWRlckdyb3VwSW5kZXg6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3Rhd
  Glvbi5KU0V4cG9ydEFsbCJIChdMZWFkZXJJbmZvUmVxdWVzdENsaWVudDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0a
  W9uLkpTRXhwb3J0QWxsIooBChVMZWFkZXJJbmZvUmVwbHlDbGllbnQSLAoSbGVhZGVyX2dyb3VwX2luZGV4GAEgAigFUhBsZWFkZ
  XJHcm91cEluZGV4EhQKBXJvdW5kGAIgAigFUgVyb3VuZDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb
  3J0QWxsIssBChBOb3RMZWFkZXJCYXRjaGVyEiwKEmxlYWRlcl9ncm91cF9pbmRleBgBIAIoBVIQbGVhZGVyR3JvdXBJbmRleBJaC
  hRjbGllbnRfcmVxdWVzdF9iYXRjaBgCIAIoCzIoLmZyYW5rZW5wYXhvcy5tZW5jaXVzLkNsaWVudFJlcXVlc3RCYXRjaFISY2xpZ
  W50UmVxdWVzdEJhdGNoOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwiSQoYTGVhZGVySW5mb
  1JlcXVlc3RCYXRjaGVyOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwiiwEKFkxlYWRlckluZ
  m9SZXBseUJhdGNoZXISLAoSbGVhZGVyX2dyb3VwX2luZGV4GAEgAigFUhBsZWFkZXJHcm91cEluZGV4EhQKBXJvdW5kGAIgAigFU
  gVyb3VuZDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsIksKBE5hY2sSFAoFcm91bmQYASACK
  AVSBXJvdW5kOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGwiVAoPQ2hvc2VuV2F0ZXJtYXJrE
  hIKBHNsb3QYASACKAVSBHNsb3Q6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCJMCgdSZWNvd
  mVyEhIKBHNsb3QYASACKAVSBHNsb3Q6LeI/KhooQHNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbCLOAgoNQ
  2xpZW50SW5ib3VuZBJGCgxjbGllbnRfcmVwbHkYASABKAsyIS5mcmFua2VucGF4b3MubWVuY2l1cy5DbGllbnRSZXBseUgAUgtjb
  GllbnRSZXBseRJTChFub3RfbGVhZGVyX2NsaWVudBgCIAEoCzIlLmZyYW5rZW5wYXhvcy5tZW5jaXVzLk5vdExlYWRlckNsaWVud
  EgAUg9ub3RMZWFkZXJDbGllbnQSZgoYbGVhZGVyX2luZm9fcmVwbHlfY2xpZW50GAMgASgLMisuZnJhbmtlbnBheG9zLm1lbmNpd
  XMuTGVhZGVySW5mb1JlcGx5Q2xpZW50SABSFWxlYWRlckluZm9SZXBseUNsaWVudDot4j8qGihAc2NhbGEuc2NhbGFqcy5qcy5hb
  m5vdGF0aW9uLkpTRXhwb3J0QWxsQgkKB3JlcXVlc3Qi2wIKDkJhdGNoZXJJbmJvdW5kEkwKDmNsaWVudF9yZXF1ZXN0GAEgASgLM
  iMuZnJhbmtlbnBheG9zLm1lbmNpdXMuQ2xpZW50UmVxdWVzdEgAUg1jbGllbnRSZXF1ZXN0ElYKEm5vdF9sZWFkZXJfYmF0Y2hlc
  hgCIAEoCzImLmZyYW5rZW5wYXhvcy5tZW5jaXVzLk5vdExlYWRlckJhdGNoZXJIAFIQbm90TGVhZGVyQmF0Y2hlchJpChlsZWFkZ
  XJfaW5mb19yZXBseV9iYXRjaGVyGAMgASgLMiwuZnJhbmtlbnBheG9zLm1lbmNpdXMuTGVhZGVySW5mb1JlcGx5QmF0Y2hlckgAU
  hZsZWFkZXJJbmZvUmVwbHlCYXRjaGVyOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGxCCQoHc
  mVxdWVzdCKeBgoNTGVhZGVySW5ib3VuZBI5CgdwaGFzZTFiGAEgASgLMh0uZnJhbmtlbnBheG9zLm1lbmNpdXMuUGhhc2UxYkgAU
  gdwaGFzZTFiEkwKDmNsaWVudF9yZXF1ZXN0GAIgASgLMiMuZnJhbmtlbnBheG9zLm1lbmNpdXMuQ2xpZW50UmVxdWVzdEgAUg1jb
  GllbnRSZXF1ZXN0ElwKFGNsaWVudF9yZXF1ZXN0X2JhdGNoGAMgASgLMiguZnJhbmtlbnBheG9zLm1lbmNpdXMuQ2xpZW50UmVxd
  WVzdEJhdGNoSABSEmNsaWVudFJlcXVlc3RCYXRjaBJMCg5oaWdoX3dhdGVybWFyaxgEIAEoCzIjLmZyYW5rZW5wYXhvcy5tZW5ja
  XVzLkhpZ2hXYXRlcm1hcmtIAFINaGlnaFdhdGVybWFyaxJsChpsZWFkZXJfaW5mb19yZXF1ZXN0X2NsaWVudBgFIAEoCzItLmZyY
  W5rZW5wYXhvcy5tZW5jaXVzLkxlYWRlckluZm9SZXF1ZXN0Q2xpZW50SABSF2xlYWRlckluZm9SZXF1ZXN0Q2xpZW50Em8KG2xlY
  WRlcl9pbmZvX3JlcXVlc3RfYmF0Y2hlchgGIAEoCzIuLmZyYW5rZW5wYXhvcy5tZW5jaXVzLkxlYWRlckluZm9SZXF1ZXN0QmF0Y
  2hlckgAUhhsZWFkZXJJbmZvUmVxdWVzdEJhdGNoZXISMAoEbmFjaxgHIAEoCzIaLmZyYW5rZW5wYXhvcy5tZW5jaXVzLk5hY2tIA
  FIEbmFjaxJSChBjaG9zZW5fd2F0ZXJtYXJrGAggASgLMiUuZnJhbmtlbnBheG9zLm1lbmNpdXMuQ2hvc2VuV2F0ZXJtYXJrSABSD
  2Nob3NlbldhdGVybWFyaxI5CgdyZWNvdmVyGAkgASgLMh0uZnJhbmtlbnBheG9zLm1lbmNpdXMuUmVjb3ZlckgAUgdyZWNvdmVyO
  i3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGxCCQoHcmVxdWVzdCLCAwoSUHJveHlMZWFkZXJJb
  mJvdW5kEkwKDmhpZ2hfd2F0ZXJtYXJrGAEgASgLMiMuZnJhbmtlbnBheG9zLm1lbmNpdXMuSGlnaFdhdGVybWFya0gAUg1oaWdoV
  2F0ZXJtYXJrEjkKB3BoYXNlMmEYAiABKAsyHS5mcmFua2VucGF4b3MubWVuY2l1cy5QaGFzZTJhSABSB3BoYXNlMmESVgoScGhhc
  2UyYV9ub29wX3JhbmdlGAMgASgLMiYuZnJhbmtlbnBheG9zLm1lbmNpdXMuUGhhc2UyYU5vb3BSYW5nZUgAUhBwaGFzZTJhTm9vc
  FJhbmdlEjkKB3BoYXNlMmIYBCABKAsyHS5mcmFua2VucGF4b3MubWVuY2l1cy5QaGFzZTJiSABSB3BoYXNlMmISVgoScGhhc2UyY
  l9ub29wX3JhbmdlGAUgASgLMiYuZnJhbmtlbnBheG9zLm1lbmNpdXMuUGhhc2UyYk5vb3BSYW5nZUgAUhBwaGFzZTJiTm9vcFJhb
  mdlOi3iPyoaKEBzY2FsYS5zY2FsYWpzLmpzLmFubm90YXRpb24uSlNFeHBvcnRBbGxCCQoHcmVxdWVzdCKZAgoPQWNjZXB0b3JJb
  mJvdW5kEjkKB3BoYXNlMWEYASABKAsyHS5mcmFua2VucGF4b3MubWVuY2l1cy5QaGFzZTFhSABSB3BoYXNlMWESOQoHcGhhc2UyY
  RgCIAEoCzIdLmZyYW5rZW5wYXhvcy5tZW5jaXVzLlBoYXNlMmFIAFIHcGhhc2UyYRJWChJwaGFzZTJhX25vb3BfcmFuZ2UYAyABK
  AsyJi5mcmFua2VucGF4b3MubWVuY2l1cy5QaGFzZTJhTm9vcFJhbmdlSABSEHBoYXNlMmFOb29wUmFuZ2U6LeI/KhooQHNjYWxhL
  nNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbEIJCgdyZXF1ZXN0ItcBCg5SZXBsaWNhSW5ib3VuZBI2CgZjaG9zZW4YA
  SABKAsyHC5mcmFua2VucGF4b3MubWVuY2l1cy5DaG9zZW5IAFIGY2hvc2VuElMKEWNob3Nlbl9ub29wX3JhbmdlGAIgASgLMiUuZ
  nJhbmtlbnBheG9zLm1lbmNpdXMuQ2hvc2VuTm9vcFJhbmdlSABSD2Nob3Nlbk5vb3BSYW5nZTot4j8qGihAc2NhbGEuc2NhbGFqc
  y5qcy5hbm5vdGF0aW9uLkpTRXhwb3J0QWxsQgkKB3JlcXVlc3QitgIKE1Byb3h5UmVwbGljYUluYm91bmQSVgoSY2xpZW50X3Jlc
  Gx5X2JhdGNoGAEgASgLMiYuZnJhbmtlbnBheG9zLm1lbmNpdXMuQ2xpZW50UmVwbHlCYXRjaEgAUhBjbGllbnRSZXBseUJhdGNoE
  lIKEGNob3Nlbl93YXRlcm1hcmsYAiABKAsyJS5mcmFua2VucGF4b3MubWVuY2l1cy5DaG9zZW5XYXRlcm1hcmtIAFIPY2hvc2VuV
  2F0ZXJtYXJrEjkKB3JlY292ZXIYAyABKAsyHS5mcmFua2VucGF4b3MubWVuY2l1cy5SZWNvdmVySABSB3JlY292ZXI6LeI/KhooQ
  HNjYWxhLnNjYWxhanMuanMuYW5ub3RhdGlvbi5KU0V4cG9ydEFsbEIJCgdyZXF1ZXN0QhviPxgKFGZyYW5rZW5wYXhvcy5tZW5ja
  XVzEAE="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, Array(
      scalapb.options.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}